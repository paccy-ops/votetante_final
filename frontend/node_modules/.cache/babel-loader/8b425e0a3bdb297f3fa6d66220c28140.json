{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { CandidateCreate, getCandidateDetails } from '../Action/CandidateActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApplyScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const candidateId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [whyApply, setApplyReason] = useState('');\n  const [bio, setBio] = useState('');\n  const dispatch = useDispatch();\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails; // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n    // }else{\n    if (!candidate.name || candidate.post !== Number(candidateId)) {\n      dispatch({\n        type: APPLY_CREATE_RESET\n      });\n      dispatch(getCandidateDetails(candidateId));\n    } else {\n      setTitle(candidate.title);\n      setBio(candidate.bio);\n      setName(candidate.name);\n      setEmail(candidate.candidate_email);\n      setAddress(candidate.address);\n      setApplyReason(candidate.whyApply);\n    }\n  }, [dispatch, candidate, candidateId]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(CandidateCreate({\n      post: candidateId,\n      title,\n      bio,\n      name,\n      candidate_email,\n      address,\n      whyApply\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/posts/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '200px',\n          outline: 'none'\n        },\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" Your applying for \", /*#__PURE__*/_jsxDEV(\"spn\", {\n                style: {\n                  color: 'seagreen',\n                  marginLeft: '3px',\n                  marginRight: '3px',\n                  fontWeight: '600'\n                },\n                children: [\" \", candidate.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 32\n              }, this), \" Post\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \" Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                placeholder: \" Applicant Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \" Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                placeholder: \" Applicant Email\",\n                value: candidate_email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \" Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \" Applicant address\",\n                value: address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Biography\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"description\",\n                placeholder: \"Write a Bio\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"why\",\n                children: \"Why are you applying for this Post?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"why\",\n                placeholder: \"why this post? \",\n                value: whyApply,\n                onChange: e => setApplyReason(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SUBMIT APPLICATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplyScreen, \"NopYeQXpXH0PF3FGYSgw261W4L0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ApplyScreen;\nexport default ApplyScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","Card","LoadingSpinner","Notification","listPostDetails","PostUpdate","CandidateCreate","getCandidateDetails","ApplyScreen","match","history","notify","setNotify","isOpen","message","type","candidateId","params","id","title","setTitle","name","setName","candidate_email","setEmail","address","setAddress","whyApply","setApplyReason","bio","setBio","dispatch","candidateDetails","state","loading","error","candidate","post","Number","APPLY_CREATE_RESET","updateSubmitHandler","e","preventDefault","position","left","outline","color","marginLeft","marginRight","fontWeight","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css'\nimport Notification from '../shared/components/UIElements/Notification'\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { CandidateCreate, getCandidateDetails } from '../Action/CandidateActions';\n\nfunction ApplyScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n const candidateId = match.params.id\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [address,setAddress] = useState('');\n  const [whyApply,setApplyReason] = useState('');\n  const [bio, setBio] = useState('');\n  \n  \n\n  const dispatch = useDispatch()\n\n  const candidateDetails = useSelector(state => state.candidateDetails)\n  const {loading,error,candidate} = candidateDetails\n\n\n  // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n    \n    // }else{\n      if(!candidate.name || candidate.post !== Number(candidateId)){\n        dispatch({type:APPLY_CREATE_RESET})\n        dispatch(getCandidateDetails(candidateId))\n        }else{\n          setTitle(candidate.title)\n          setBio(candidate.bio) \n          setName(candidate.name) \n          setEmail(candidate.candidate_email)\n          setAddress(candidate.address)\n          setApplyReason(candidate.whyApply)\n        }\n    \n      \n  }, [dispatch,candidate,candidateId])\n  \n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n   dispatch(CandidateCreate({\n     post:candidateId, title,bio,name,candidate_email,address,whyApply\n   }))\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n    \n  };\n  return (\n    \n    <div>\n    <Link to=\"/admin/posts/\">\n    <button  style={{position:'absolute',left:'200px' ,outline:'none'}} type=\"button\" className=\"btn btn-outline-secondary\">GO BACK</button>\n    </Link>\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n        \n        {loading? <LoadingSpinner/>:error?<Card>{error}</Card>:\n        <div className='form-all'>\n        <h2> Your applying for <spn style={{color:'seagreen',marginLeft:'3px',marginRight:'3px',fontWeight:'600'}}> {candidate.title} </spn> Post</h2>\n    \n      <div className=\"form-control\">\n      <label htmlFor=\"title\">Post Title</label>\n      <input \n      type=\"text\" \n      id=\"title\" \n      placeholder=\"Enter Post Title\" \n      value={title}\n      onChange={(e) => setTitle(e.target.value)} />\n    \n    </div>\n\n    <div className=\"form-control\">\n    <label htmlFor=\"name\"> Name</label>\n    <input \n    type=\"text\" \n    id=\"name\" \n    placeholder=\" Applicant Name\" \n    value={name}\n    onChange={(e) => setName(e.target.value)} />\n  \n  </div>\n\n  <div className=\"form-control\">\n  <label htmlFor=\"email\"> Email</label>\n  <input \n  type=\"email\" \n  id=\"email\" \n  placeholder=\" Applicant Email\" \n  value={candidate_email}\n  onChange={(e) => setEmail(e.target.value)} />\n\n</div>\n\n<div className=\"form-control\">\n<label htmlFor=\"address\"> Address</label>\n<input \ntype=\"text\" \nid=\"address\" \nplaceholder=\" Applicant address\" \nvalue={address}\nonChange={(e) => setAddress(e.target.value)} />\n</div>\n\n    <div className=\"form-control\">\n      <label htmlFor=\"description\">Biography</label>\n      <textarea type=\"text\" \n      id=\"description\" \n      placeholder=\"Write a Bio\"  \n      value={bio}\n      onChange={(e) => setBio(e.target.value)}/>\n    </div>\n\n    <div className=\"form-control\">\n      <label htmlFor=\"why\">Why are you applying for this Post?</label>\n      <textarea type=\"text\" \n      id=\"why\" \n      placeholder=\"why this post? \"  \n      value={whyApply}\n      onChange={(e) => setApplyReason(e.target.value)}/>\n    </div>\n    \n    \n        \n        <Button type='submit'>\n          SUBMIT APPLICATION \n        </Button>\n\n        \n          \n  \n</div>\n      }\n         \n        </div>\n      </div>\n    </form>\n    <Notification notify={notify} setNotify={setNotify} />\n\n    </div>\n    \n  );\n}\n\n\n\nexport default ApplyScreen;\n\n\n\n"]},"metadata":{},"sourceType":"module"}