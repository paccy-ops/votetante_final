{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport axios from 'axios';\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfileScreen({\n  history\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [image, setImage] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmpassword] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo.id !== user.id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        history.push('/user/profile');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setLocation(user.location);\n        setBio(user.bio);\n        setImage(user.image);\n      }\n    }\n  }, [dispatch, userInfo, user, history, success]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user.id,\n        name: name,\n        email: email,\n        location: location,\n        bio: bio,\n        // image: image,\n        password: password\n      }));\n    }\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('user_id', user.id);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/posts/upload/', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updateSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"EDIT YOUR PROFILE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              placeholder: \"Enter Username\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              placeholder: \"Enter Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address\",\n              placeholder: \"Enter Address\",\n              value: location,\n              onChange: e => setLocation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bio\",\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"bio\",\n              placeholder: \"Write Bio\",\n              value: bio,\n              onChange: e => setBio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"User Profile Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"file\",\n              id: \"image\",\n              value: image,\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control form-control-lg\",\n                id: \"formFileLg\",\n                type: \"file\",\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this), uploading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                asOverlay: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Enter Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pasword2\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password2\",\n              placeholder: \"Enter Password again\",\n              value: confirmPassword,\n              onChange: e => setConfirmpassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"SAVE PROFILE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfileScreen, \"wUL148c6p+hO1/PHGIdU2jEeFwc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Card","LoadingSpinner","USER_UPDATE_PROFILE_RESET","axios","getUserDetails","updateUserProfile","EditProfileScreen","history","message","setMessage","name","setName","email","setEmail","location","setLocation","bio","setBio","uploading","setUploading","image","setImage","password","setPassword","confirmPassword","setConfirmpassword","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","id","type","updateSubmitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport axios from 'axios'\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nfunction EditProfileScreen({ history }) {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [image, setImage] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmpassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo.id !== user.id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails('profile'));\n        history.push('/user/profile');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setLocation(user.location);\n        setBio(user.bio);\n        setImage(user.image)\n      }\n    }\n  }, [dispatch, userInfo, user, history, success]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user.id,\n          name: name,\n          email: email,\n          location: location,\n          bio: bio,\n          // image: image,\n          password: password,\n        })\n      );\n    }\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append('image', file);\n    formData.append('user_id', user.id);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n\n      const { data } = await axios.post('/api/posts/upload/', formData, config);\n\n      setImage(data);\n\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n          <div className='form-all'>\n            <h2>EDIT YOUR PROFILE </h2>\n            {message && <Card className='error_message'>{message}</Card>}\n            {error && <Card className='error_message'>{error}</Card>}\n            {loading && <LoadingSpinner asOverlay />}\n            <div className='form-control'>\n              <label htmlFor='username'>Name</label>\n              <input\n                type='text'\n                id='username'\n                placeholder='Enter Username'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='email'>Email</label>\n              <input\n                type='email'\n                id='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n              <label htmlFor='address'>Address</label>\n              <input\n                type='text'\n                id='address'\n                placeholder='Enter Address'\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n              <label htmlFor='bio'>Bio</label>\n              <textarea\n                type='text'\n                id='bio'\n                placeholder='Write Bio'\n                value={bio}\n                onChange={(e) => setBio(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n            <label htmlFor='image'>User Profile Upload</label>\n            <textarea\n              type='file'\n              id='image'\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            <div>\n                    <input\n                      className='form-control form-control-lg'\n                      id='formFileLg'\n                      type='file'\n                      onChange={uploadFileHandler}\n                    />\n                    {uploading && <LoadingSpinner asOverlay />}\n                  </div>\n          </div>\n            <div className='form-control'>\n              <label htmlFor='password'>Password</label>\n              <input\n                type='password'\n                id='password'\n                placeholder='Enter Password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='pasword2'>Confirm Password</label>\n              <input\n                type='password'\n                id='password2'\n                placeholder='Enter Password again'\n                value={confirmPassword}\n                onChange={(e) => setConfirmpassword(e.target.value)}\n              />\n            </div>\n\n            <Button type='submit'>SAVE PROFILE</Button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default EditProfileScreen;\n"]},"metadata":{},"sourceType":"module"}