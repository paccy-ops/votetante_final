{"ast":null,"code":"const KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId'\n};\nexport const getGetDepartmentCollection = () => [{\n  id: '1',\n  title: 'Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'Accounting'\n}, {\n  id: '4',\n  title: 'HR'\n}];\nexport function insertEmployee(data) {\n  let employees = getAllEmployees();\n  data['id'] = generateEmployeeId();\n  employees.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function updateEmployee(data) {\n  let employees = getAllEmployees();\n  let recordIndex = employees.findIndex(x => x.id === data.id);\n  employees[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function deleteEmployee(id) {\n  let employees = getAllEmployees();\n  employees = employees.filter(x => x.id !== id);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function generateEmployeeId() {\n  if (localStorage.getItem(KEYS.employeeId) === null) localStorage.setItem(KEYS.employeeId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n}\nexport function getAllEmployees() {\n  if (localStorage.getItem(KEYS.employees) === null) localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(KEYS.employees));\n}","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/services/EmployeesService.js"],"names":["KEYS","employees","employeeId","getGetDepartmentCollection","id","title","insertEmployee","data","getAllEmployees","generateEmployeeId","push","localStorage","setItem","JSON","stringify","updateEmployee","recordIndex","findIndex","x","deleteEmployee","filter","getItem","parseInt","toString","parse"],"mappings":"AAAA,MAAMA,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,WADA;AAEXC,EAAAA,UAAU,EAAE;AAFD,CAAb;AAKA,OAAO,MAAMC,0BAA0B,GAAG,MAAM,CAC9C;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAD8C,EAE9C;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAF8C,EAG9C;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAH8C,EAI9C;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAJ8C,CAAzC;AAOP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,MAAIN,SAAS,GAAGO,eAAe,EAA/B;AACAD,EAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaE,kBAAkB,EAA/B;AACAR,EAAAA,SAAS,CAACS,IAAV,CAAeH,IAAf;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,EAAqCY,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArC;AACD;AACD,OAAO,SAASc,cAAT,CAAwBR,IAAxB,EAA8B;AACnC,MAAIN,SAAS,GAAGO,eAAe,EAA/B;AACA,MAAIQ,WAAW,GAAGf,SAAS,CAACgB,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACd,EAAF,KAASG,IAAI,CAACH,EAAzC,CAAlB;AACAH,EAAAA,SAAS,CAACe,WAAD,CAAT,GAAyB,EAAE,GAAGT;AAAL,GAAzB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,EAAqCY,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArC;AACD;AAED,OAAO,SAASkB,cAAT,CAAwBf,EAAxB,EAA4B;AACjC,MAAIH,SAAS,GAAGO,eAAe,EAA/B;AACAP,EAAAA,SAAS,GAAGA,SAAS,CAACmB,MAAV,CAAkBF,CAAD,IAAOA,CAAC,CAACd,EAAF,KAASA,EAAjC,CAAZ;AACAO,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,EAAqCY,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArC;AACD;AACD,OAAO,SAASQ,kBAAT,GAA8B;AACnC,MAAIE,YAAY,CAACU,OAAb,CAAqBrB,IAAI,CAACE,UAA1B,MAA0C,IAA9C,EACES,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACE,UAA1B,EAAsC,GAAtC;AACF,MAAIE,EAAE,GAAGkB,QAAQ,CAACX,YAAY,CAACU,OAAb,CAAqBrB,IAAI,CAACE,UAA1B,CAAD,CAAjB;AACAS,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACE,UAA1B,EAAsC,CAAC,EAAEE,EAAH,EAAOmB,QAAP,EAAtC;AACA,SAAOnB,EAAP;AACD;AAED,OAAO,SAASI,eAAT,GAA2B;AAChC,MAAIG,YAAY,CAACU,OAAb,CAAqBrB,IAAI,CAACC,SAA1B,MAAyC,IAA7C,EACEU,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,EAAqCY,IAAI,CAACC,SAAL,CAAe,EAAf,CAArC;AACF,SAAOD,IAAI,CAACW,KAAL,CAAWb,YAAY,CAACU,OAAb,CAAqBrB,IAAI,CAACC,SAA1B,CAAX,CAAP;AACD","sourcesContent":["const KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId',\n};\n\nexport const getGetDepartmentCollection = () => [\n  { id: '1', title: 'Development' },\n  { id: '2', title: 'Marketing' },\n  { id: '3', title: 'Accounting' },\n  { id: '4', title: 'HR' },\n];\n\nexport function insertEmployee(data) {\n  let employees = getAllEmployees();\n  data['id'] = generateEmployeeId();\n  employees.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function updateEmployee(data) {\n  let employees = getAllEmployees();\n  let recordIndex = employees.findIndex((x) => x.id === data.id);\n  employees[recordIndex] = { ...data };\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function deleteEmployee(id) {\n  let employees = getAllEmployees();\n  employees = employees.filter((x) => x.id !== id);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function generateEmployeeId() {\n  if (localStorage.getItem(KEYS.employeeId) === null)\n    localStorage.setItem(KEYS.employeeId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n}\n\nexport function getAllEmployees() {\n  if (localStorage.getItem(KEYS.employees) === null)\n    localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(KEYS.employees));\n}\n"]},"metadata":{},"sourceType":"module"}