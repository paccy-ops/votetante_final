{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/offiaclreact/src/screen/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport './UserListScreen.css';\nimport { deleteUser, listUsers } from '../Action/UserActions';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls';\nimport Notification from '../shared/components/UIElements/Notification';\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog'; // import Popup from '../shared/components/UIElements/Popup'\n// import EmployeesForm from '../shared/components/UIElements/EmployeesForm'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserListScreen({\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    users,\n    loading,\n    error\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login/user');\n    }\n  }, [dispatch, userInfo, history, success]);\n\n  const deleteHandler = id => {\n    dispatch(deleteUser(id));\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '23px'\n      },\n      children: \"USERS LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Candidate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: user.isAdmin ? '#126EFD' : ''\n              },\n              children: user.isAdmin ? 'Admin' : 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: user.isCandidate ? '#126EFD' : ''\n            },\n            children: user.isCandidate ? 'Yes' : /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                color: 'red',\n                marginLeft: '20px'\n              },\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/users/${user.id}`,\n              children: /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/admin/user/${user.id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n              color: \"default\",\n              children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                fontSize: \"small\",\n                onClick: () => {\n                  setConfirmDialog({\n                    isOpen: true,\n                    title: 'Are you sure to delete this User?',\n                    subTitle: \"You can't undo this operation!\",\n                    onConfirm: () => {\n                      deleteHandler(user.id);\n                    }\n                  }); // onDelete(item.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserListScreen, \"2gifum4A9QffcZzNxz4P9banyZc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default _c2 = withRouter(UserListScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserListScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/screen/UserListScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","withRouter","VisibilityIcon","LoadingSpinner","Card","deleteUser","listUsers","EditOutlined","DeleteOutline","Controls","Notification","ConfirmDialog","UserListScreen","history","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","dispatch","userList","state","users","loading","error","userLogin","userInfo","userDelete","success","isAdmin","push","deleteHandler","id","fontSize","map","user","name","email","location","color","isCandidate","marginLeft","onConfirm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport './UserListScreen.css';\nimport { deleteUser, listUsers } from '../Action/UserActions';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls';\nimport Notification from '../shared/components/UIElements/Notification';\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog';\n// import Popup from '../shared/components/UIElements/Popup'\n// import EmployeesForm from '../shared/components/UIElements/EmployeesForm'\n\nfunction UserListScreen({ history }) {\n  \n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: '',\n  });\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { users, loading, error } = userList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login/user');\n    }\n  }, [dispatch, userInfo, history, success]);\n\n  const deleteHandler = (id) => {\n    dispatch(deleteUser(id));\n    setConfirmDialog({\n      ...confirmDialog,\n      isOpen: false,\n    });\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error',\n    });\n  };\n  return (\n    <div className='user__list'>\n      <h2 style={{ fontSize: '23px' }}>USERS LIST</h2>\n\n      {loading ? (\n        <LoadingSpinner asOverlay />\n      ) : error ? (\n        <Card>{error}</Card>\n      ) : (\n        <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Address</th>\n              <th>Role</th>\n              <th>Candidate</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user.id}>\n                <td>{user.id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.location}</td>\n                <td>\n                  <span style={{ color: user.isAdmin ? '#126EFD' : '' }}>\n                    {user.isAdmin ? 'Admin' : 'User'}\n                  </span>\n                </td>\n                <td style={{ color: user.isCandidate ? '#126EFD' : '' }}>\n                  {user.isCandidate ? (\n                    'Yes'\n                  ) : (\n                    <i\n                      style={{ color: 'red', marginLeft: '20px' }}\n                      className='fas fa-times'></i>\n                  )}\n                </td>\n                <td>\n                  <Link to={`/users/${user.id}`}>\n                    <Controls.ActionButton color='primary'>\n                      <VisibilityIcon fontSize='small' />\n                    </Controls.ActionButton>\n                  </Link>\n                  <Link to={`/admin/user/${user.id}/edit`}>\n                    <Controls.ActionButton color='primary'>\n                      <EditOutlined fontSize='small' />\n                    </Controls.ActionButton>\n                  </Link>\n                  <Controls.ActionButton color='default'>\n                    <DeleteOutline\n                      fontSize='small'\n                      onClick={() => {\n                        setConfirmDialog({\n                          isOpen: true,\n                          title: 'Are you sure to delete this User?',\n                          subTitle: \"You can't undo this operation!\",\n                          onConfirm: () => {\n                            deleteHandler(user.id);\n                          },\n                        });\n                        // onDelete(item.id);\n                      }}\n                    />\n                  </Controls.ActionButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      <Notification notify={notify} setNotify={setNotify} />\n      <ConfirmDialog\n        confirmDialog={confirmDialog}\n        setConfirmDialog={setConfirmDialog}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(UserListScreen);\n"]},"metadata":{},"sourceType":"module"}