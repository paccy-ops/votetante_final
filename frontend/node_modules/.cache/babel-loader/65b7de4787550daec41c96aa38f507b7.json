{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EmployeesForm from './EmployeesForm';\nimport Controls from '../../Components/controls/Controls';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popup from '../../Components/Popup';\nimport Notification from '../../Components/Notification';\nimport ConfirmDialog from '../../Components/ConfirmDialog';\nimport * as employeeServices from '../../services/EmployeesService';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from '../../Components/useTable';\nimport * as employeeService from '../../services/EmployeesService';\nimport AddIcon from '@material-ui/icons/Add';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listUsers } from '../../../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  }\n}));\nconst headCells = [{\n  id: 'name',\n  label: 'User Name'\n}, {\n  id: 'email',\n  label: 'Email Address (Personal)'\n}, {\n  id: 'isAdmin',\n  label: 'User status'\n}, {\n  id: 'isCandidate',\n  label: 'Candidate'\n}, // { id: 'department', label: 'Department ', disableSorting: true },\n{\n  id: 'actions',\n  label: 'Actions ',\n  disableSorting: true\n}];\n\nconst Employees = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(users);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const {\n    TblPagination,\n    TblContainer,\n    TblHeader,\n    recordsAfterPaginationSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {//\n  };\n\n  const addOrEdit = (employee, resetForm) => {\n    if (employee.id === 0) {\n      employeeServices.insertEmployee(employee);\n    } else {\n      employeeServices.updateEmployee(employee);\n      setRecordForEdit(null);\n      resetForm();\n      setOpenPopup(false);\n      setRecords(employeeService.getAllEmployees());\n      setNotify({\n        isOpen: true,\n        message: 'Submitted Successfully',\n        type: 'success'\n      });\n    }\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    employeeServices.deleteEmployee(id);\n    setRecords(employeeService.getAllEmployees());\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search Employees\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 24\n          }, this),\n          onClick: () => setOpenPopup(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPaginationSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.isAdmin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontsize: \"small\",\n                  onClick: () => {\n                    openInPopup(item);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                onClick: () => {\n                  setConfirmDialog({\n                    isOpen: true,\n                    title: 'Are you sure to delete this record?',\n                    subTitle: \"You can't undo this operation!\",\n                    onConfirm: () => {\n                      onDelete(item.id);\n                    }\n                  }); // onDelete(item.id);\n                },\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                  fontsize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      title: \"Employee Form\",\n      children: /*#__PURE__*/_jsxDEV(EmployeesForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Employees, \"OkzcfjWhSmC+KfqHzkj9hUBWhSY=\", false, function () {\n  return [useDispatch, useSelector, useStyles, useTable];\n});\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/Employees.js"],"names":["React","useState","useEffect","EmployeesForm","Controls","SearchIcon","Popup","Notification","ConfirmDialog","employeeServices","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","employeeService","AddIcon","EditOutlined","DeleteOutline","useSelector","useDispatch","listUsers","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","newButton","position","right","headCells","id","label","disableSorting","Employees","dispatch","userList","state","loading","error","users","classes","recordForEdit","setRecordForEdit","records","setRecords","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","notify","setNotify","message","type","TblPagination","TblContainer","TblHeader","recordsAfterPaginationSorting","handleSearch","e","addOrEdit","employee","resetForm","insertEmployee","updateEmployee","getAllEmployees","openInPopup","item","onDelete","deleteEmployee","startAdornment","map","name","email","mobile","isAdmin","onConfirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EmployeesForm from './EmployeesForm';\n\nimport Controls from '../../Components/controls/Controls';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popup from '../../Components/Popup';\nimport Notification from '../../Components/Notification';\nimport ConfirmDialog from '../../Components/ConfirmDialog';\nimport * as employeeServices from '../../services/EmployeesService';\n\nimport {\n  Paper,\n  makeStyles,\n  TableBody,\n  TableRow,\n  TableCell,\n  Toolbar,\n  InputAdornment,\n} from '@material-ui/core';\nimport useTable from '../../Components/useTable';\nimport * as employeeService from '../../services/EmployeesService';\nimport AddIcon from '@material-ui/icons/Add';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listUsers } from '../../../Action/UserActions';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n  searchInput: {\n    width: '75%',\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px',\n  },\n}));\n\nconst headCells = [\n  { id: 'name', label: 'User Name' },\n  { id: 'email', label: 'Email Address (Personal)' },\n  { id: 'isAdmin', label: 'User status' },\n  { id: 'isCandidate', label: 'Candidate' },\n  // { id: 'department', label: 'Department ', disableSorting: true },\n  { id: 'actions', label: 'Actions ', disableSorting: true },\n];\n\nconst Employees = () => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n\n  const classes = useStyles();\n\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(users);\n  const [filterFn, setFilterFn] = useState({\n    fn: (items) => {\n      return items;\n    },\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: '',\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n\n  const {\n    TblPagination,\n    TblContainer,\n    TblHeader,\n    recordsAfterPaginationSorting,\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = (e) => {\n    //\n  };\n  const addOrEdit = (employee, resetForm) => {\n    if (employee.id === 0) {\n      employeeServices.insertEmployee(employee);\n    } else {\n      employeeServices.updateEmployee(employee);\n      setRecordForEdit(null);\n      resetForm();\n      setOpenPopup(false);\n      setRecords(employeeService.getAllEmployees());\n      setNotify({\n        isOpen: true,\n        message: 'Submitted Successfully',\n        type: 'success',\n      });\n    }\n  };\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = (id) => {\n    setConfirmDialog({\n      ...confirmDialog,\n      isOpen: false,\n    });\n    employeeServices.deleteEmployee(id);\n    setRecords(employeeService.getAllEmployees());\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error',\n    });\n  };\n  return (\n    <>\n      <Paper className={classes.pageContent}>\n        <Toolbar>\n          <Controls.Input\n            className={classes.searchInput}\n            label='Search Employees'\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={handleSearch}\n          />\n          <Controls.Button\n            className={classes.newButton}\n            text='Add New'\n            variant='outlined'\n            startIcon={<AddIcon />}\n            onClick={() => setOpenPopup(true)}\n          />\n        </Toolbar>\n        <TblContainer>\n          <TblHeader />\n          <TableBody>\n            {recordsAfterPaginationSorting().map((item) => (\n              <TableRow key={item.id}>\n                <TableCell>{item.name}</TableCell>\n                <TableCell>{item.email}</TableCell>\n                <TableCell>{item.mobile}</TableCell>\n                <TableCell>{item.isAdmin}</TableCell>\n                <TableCell>\n                  <Controls.ActionButton color='primary'>\n                    <EditOutlined\n                      fontsize='small'\n                      onClick={() => {\n                        openInPopup(item);\n                      }}\n                    />\n                  </Controls.ActionButton>\n                  <Controls.ActionButton\n                    onClick={() => {\n                      setConfirmDialog({\n                        isOpen: true,\n                        title: 'Are you sure to delete this record?',\n                        subTitle: \"You can't undo this operation!\",\n                        onConfirm: () => {\n                          onDelete(item.id);\n                        },\n                      });\n                      // onDelete(item.id);\n                    }}\n                    color='secondary'>\n                    <DeleteOutline fontsize='small' />\n                  </Controls.ActionButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </TblContainer>\n        <TblPagination />\n      </Paper>\n      <Popup\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        title='Employee Form'>\n        <EmployeesForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n      <ConfirmDialog\n        confirmDialog={confirmDialog}\n        setConfirmDialog={setConfirmDialog}\n      />\n    </>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}