{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/EmployeesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from '../../Components/Useform';\nimport Controls from '../../Components/controls/Controls';\nimport * as employeeServices from '../../services/EmployeesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenderItem = [{\n  id: 'male',\n  title: 'male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  isCandidate: false,\n  isAdmin: false\n};\n\nconst EmployeesForm = props => {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors\n    };\n    if ('name' in fieldsValues) temp.fullName = fieldsValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldsValues) temp.email = /$^|.+@.+..+/.test(fieldsValues.email) ? '' : 'Email is not field';\n    if ('departmentId' in fieldsValues) temp.departmentId = fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n    setErrors({ ...temp\n    });\n    if (fieldsValues === values) return Object.values(temp).every(x => x === '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = Useform(initialValues, true, validate);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"name\",\n          label: \"Name\",\n          value: values.name,\n          error: errors.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.CheckBox, {\n        name: \"isPermanent\",\n        label: \"permanent Employee\",\n        value: values.isPermanent,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.CheckBox, {\n        name: \"isAdmin\",\n        label: \"Admin\",\n        value: values.isAdmin,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          onClick: resetForm,\n          color: \"default\",\n          text: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeesForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EmployeesForm;\nexport default EmployeesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesForm\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/EmployeesForm.js"],"names":["React","useEffect","Grid","Useform","Form","Controls","employeeServices","GenderItem","id","title","initialValues","name","email","mobile","city","gender","departmentId","isCandidate","isAdmin","EmployeesForm","props","addOrEdit","recordForEdit","validate","fieldsValues","values","temp","errors","fullName","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","event","preventDefault","isPermanent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from '../../Components/Useform';\nimport Controls from '../../Components/controls/Controls';\nimport * as employeeServices from '../../services/EmployeesService';\n\nconst GenderItem = [\n  { id: 'male', title: 'male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  isCandidate: false,\n  isAdmin: false,\n};\n\nconst EmployeesForm = (props) => {\n  const { addOrEdit, recordForEdit } = props;\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors };\n    if ('name' in fieldsValues)\n      temp.fullName = fieldsValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldsValues)\n      temp.email = /$^|.+@.+..+/.test(fieldsValues.email)\n        ? ''\n        : 'Email is not field';\n    if ('departmentId' in fieldsValues)\n      temp.departmentId =\n        fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n    setErrors({\n      ...temp,\n    });\n    if (fieldsValues === values)\n      return Object.values(temp).every((x) => x === '');\n  };\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  } = Useform(initialValues, true, validate);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({\n        ...recordForEdit,\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='name'\n            label='Name'\n            value={values.name}\n            error={errors.name}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            label='Email'\n            name='email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n        </Grid>\n\n        <Controls.CheckBox\n          name='isPermanent'\n          label='permanent Employee'\n          value={values.isPermanent}\n          onChange={handleInputChange}\n        />\n\n        <Controls.CheckBox\n          name='isAdmin'\n          label='Admin'\n          value={values.isAdmin}\n          onChange={handleInputChange}\n        />\n\n        <div>\n          <Controls.Button type='submit' text='Submit' />\n          <Controls.Button onClick={resetForm} color='default' text='Reset' />\n        </div>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default EmployeesForm;\n"]},"metadata":{},"sourceType":"module"}