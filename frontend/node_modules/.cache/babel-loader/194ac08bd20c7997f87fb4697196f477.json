{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails, listPosts } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VotingScreenPage = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [data1, setData1] = useState();\n  const [loadingData, setLoadingData] = useState(false);\n  const postId = match.params.id;\n  const postList = useSelector(state => state.postList);\n  const {\n    posts\n  } = postList;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]); // if (loadingData) {\n  //   return <LoadingSpinner asOverlay />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      marginTop: '200px'\n    },\n    children: [posts.map(item => /*#__PURE__*/_jsxDEV(\"select\", {\n      class: \"form-select form-select-lg mb-3\",\n      \"aria-label\": \".form-select-lg example\",\n      onChange: e => {\n        const selectedItem = e.target.value;\n        setData1(selectedItem);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        selected: true,\n        children: \"Open this select menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your Voting for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: '10px',\n          color: 'seagreen'\n        },\n        children: data1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \"Post\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VotingScreenPage, \"memhHGn+kc0njOCSI0sgu3xHB9g=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = VotingScreenPage;\nexport default _c2 = withRouter(VotingScreenPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VotingScreenPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js"],"names":["React","useEffect","useState","Link","withRouter","useSelector","useDispatch","listPostDetails","listPosts","LoadingSpinner","Card","APPLY_CREATE_RESET","VotingScreenPage","match","history","dispatch","data","setData","data1","setData1","loadingData","setLoadingData","postId","params","id","postList","state","posts","postDetails","post","loading","errors","userLogin","userInfo","createApplication","success","successCreated","loadingCreated","error","errorCreated","type","push","candidates","marginTop","map","item","e","selectedItem","target","value","title","margin","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails, listPosts } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\n\nconst VotingScreenPage = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState([]);\n  const [data1, setData1] = useState();\n  const [loadingData, setLoadingData] = useState(false);\n\n  const postId = match.params.id;\n\n  const postList = useSelector(state => state.postList)\n  const {posts} = postList\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]);\n\n  // if (loadingData) {\n  //   return <LoadingSpinner asOverlay />;\n  // }\n\n  return (\n    <form style={{ marginTop: '200px' }}>\n      {posts.map((item)=>(\n        <select class=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n        onChange={(e) => {\n          const selectedItem = e.target.value;\n          setData1(selectedItem)\n        }\n        }\n        key={item.id}\n        >\n      <option selected>Open this select menu</option>\n      <option value=\"1\">{item.title}</option>\n      <option value=\"2\">{item.title}</option>\n      <option value=\"3\">{item.title}</option>\n        </select>\n\n      ))}\n        \n     \n        <h1>\n          Your Voting for{' '}\n          <span style={{ margin: '10px', color: 'seagreen' }}>\n            {data1}\n          </span>\n          Post\n        </h1>\n     \n      \n\n     \n    </form>\n  );\n};\n\nexport default withRouter(VotingScreenPage);\n"]},"metadata":{},"sourceType":"module"}