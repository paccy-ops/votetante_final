{"ast":null,"code":"import { CANDIDATES_LIST_REQUEST, CANDIDATES_LIST_SUCCESS, CANDIDATES_LIST_FAIL //\n, APPLY_CREATE_REQUEST, APPLY_CREATE_SUCCESS, APPLY_CREATE_FAIL //\n, CANDIDATE_DETAILS_SUCCESS, CANDIDATE_DETAILS_FAIL, CANDIDATE_DETAILS_REQUEST //\n, CANDIDATE_UPDATE_SUCCESS, CANDIDATE_UPDATE_FAIL, CANDIDATE_UPDATE_REQUEST } from '../constants/CandidatesConstants';\nimport axios from 'axios';\nexport const listCandidates = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/candidates/`, config);\n    dispatch({\n      type: CANDIDATES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATES_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // create post\n\nexport const CandidateCreate = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: APPLY_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`api/candidates/${id}/create/`, {}, config);\n    dispatch({\n      type: APPLY_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: APPLY_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // get candidate details\n\nexport const getCandidateDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/candidates/${id}`, config);\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const PostUpdate = post => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`/api/posts/update/${post.id}/`, post, config);\n    dispatch({\n      type: CANDIDATE_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/Action/CandidateActions.js"],"names":["CANDIDATES_LIST_REQUEST","CANDIDATES_LIST_SUCCESS","CANDIDATES_LIST_FAIL","APPLY_CREATE_REQUEST","APPLY_CREATE_SUCCESS","APPLY_CREATE_FAIL","CANDIDATE_DETAILS_SUCCESS","CANDIDATE_DETAILS_FAIL","CANDIDATE_DETAILS_REQUEST","CANDIDATE_UPDATE_SUCCESS","CANDIDATE_UPDATE_FAIL","CANDIDATE_UPDATE_REQUEST","axios","listCandidates","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","detail","message","CandidateCreate","id","post","getCandidateDetails","PostUpdate","patch"],"mappings":"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","sourcesContent":["import {\n  CANDIDATES_LIST_REQUEST,\n  CANDIDATES_LIST_SUCCESS,\n  CANDIDATES_LIST_FAIL,\n\n  //\n  APPLY_CREATE_REQUEST,\n  APPLY_CREATE_SUCCESS,\n  APPLY_CREATE_FAIL,\n\n  //\n  CANDIDATE_DETAILS_SUCCESS,\n  CANDIDATE_DETAILS_FAIL,\n  CANDIDATE_DETAILS_REQUEST,\n\n  //\n  CANDIDATE_UPDATE_SUCCESS,\n  CANDIDATE_UPDATE_FAIL,\n  CANDIDATE_UPDATE_REQUEST,\n} from '../constants/CandidatesConstants';\nimport axios from 'axios';\n\nexport const listCandidates = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/candidates/`, config);\n\n    dispatch({\n      type: CANDIDATES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATES_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// create post\n\nexport const CandidateCreate = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: APPLY_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      `api/candidates/${id}/create/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: APPLY_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: APPLY_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// get candidate details\n\nexport const getCandidateDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CANDIDATE_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `/api/candidates/${id}`,\n\n      config\n    );\n    dispatch({ type: CANDIDATE_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const PostUpdate = (post) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.patch(\n      `/api/posts/update/${post.id}/`,\n      post,\n      config\n    );\n\n    dispatch({\n      type: CANDIDATE_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}