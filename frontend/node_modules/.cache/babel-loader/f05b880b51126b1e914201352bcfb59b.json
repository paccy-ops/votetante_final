{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EmployeesForm from './EmployeesForm';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport Card from '../../../shared/components/UIElements/Card';\nimport Controls from '../../Components/controls/Controls';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popup from '../../Components/Popup';\nimport Notification from '../../Components/Notification';\nimport ConfirmDialog from '../../Components/ConfirmDialog';\nimport * as employeeServices from '../../services/EmployeesService';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from '../../Components/useTable';\nimport * as employeeService from '../../services/EmployeesService';\nimport AddIcon from '@material-ui/icons/Add';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, listUsers, updateUser } from '../../../Action/UserActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../../../constants/UserConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  }\n}));\nconst headCells = [{\n  id: 'name',\n  label: 'User Name'\n}, {\n  id: 'email',\n  label: 'Email Address (Personal)'\n}, {\n  id: 'Admin',\n  label: 'User Status',\n  disableSorting: true\n}, {\n  id: 'Candidate',\n  label: 'Candidate',\n  disableSorting: true\n}, {\n  id: 'actions',\n  label: 'Actions ',\n  disableSorting: true\n}];\n\nconst Employees = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const userDetails = useSelector((state) => state.userDetails);\n  // const { user, loading: userLoading, error: userError } = userDetails;\n\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      history.push('/admin/users/');\n    } else {\n      if (userInfo && userInfo.isAdmin) {\n        dispatch(listUsers());\n      } else {\n        history.push('/login');\n      }\n    }\n  }, [dispatch, userInfo, successUpdate, history, successDelete]);\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(users);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const {\n    TblPagination,\n    TblContainer,\n    TblHeader,\n    recordsAfterPaginationSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === '') {\n          return items;\n        } else {\n          return items.filter(x => x.fullName.includes(target.value));\n        }\n      }\n    });\n  };\n\n  const addOrEdit = (user, resetForm) => {\n    if (user.id === 0) {\n      console.log('Added user');\n    } else {\n      dispatch(updateUser(user.id));\n      setRecordForEdit(null);\n      resetForm();\n      setOpenPopup(false);\n      setRecords(users);\n      setNotify({\n        isOpen: true,\n        message: 'Submitted Successfully',\n        type: 'success'\n      });\n    }\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    dispatch(deleteUser(id));\n    setRecords(users);\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search User\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 26\n          }, this),\n          onClick: () => setOpenPopup(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPaginationSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.isAdmin ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.isCandidate ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontsize: \"small\",\n                  onClick: () => {\n                    openInPopup(item);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                onClick: () => {\n                  setConfirmDialog({\n                    isOpen: true,\n                    title: 'Are you sure to delete this record?',\n                    subTitle: \"You can't undo this operation!\",\n                    onConfirm: () => {\n                      onDelete(item.id);\n                    }\n                  }); // onDelete(item.id);\n                },\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                  fontsize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      title: \"User Form\",\n      children: /*#__PURE__*/_jsxDEV(EmployeesForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Employees, \"uE+AGJUrIKeC/qVZ7aFbHj4c6qY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useStyles, useTable];\n});\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/Employees.js"],"names":["React","useState","useEffect","EmployeesForm","LoadingSpinner","Card","Controls","SearchIcon","Popup","Notification","ConfirmDialog","employeeServices","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","employeeService","AddIcon","EditOutlined","DeleteOutline","useSelector","useDispatch","deleteUser","listUsers","updateUser","USER_UPDATE_PROFILE_RESET","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","newButton","position","right","headCells","id","label","disableSorting","Employees","history","dispatch","userList","state","loading","error","users","userUpdate","success","successUpdate","errorUpdate","loadingUpdate","userLogin","userInfo","userDelete","successDelete","type","push","isAdmin","classes","recordForEdit","setRecordForEdit","records","setRecords","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","notify","setNotify","message","TblPagination","TblContainer","TblHeader","recordsAfterPaginationSorting","handleSearch","e","target","value","filter","x","fullName","includes","addOrEdit","user","resetForm","console","log","openInPopup","item","onDelete","startAdornment","map","name","email","isCandidate","onConfirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EmployeesForm from './EmployeesForm';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport Card from '../../../shared/components/UIElements/Card';\nimport Controls from '../../Components/controls/Controls';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popup from '../../Components/Popup';\nimport Notification from '../../Components/Notification';\nimport ConfirmDialog from '../../Components/ConfirmDialog';\nimport * as employeeServices from '../../services/EmployeesService';\n\nimport {\n  Paper,\n  makeStyles,\n  TableBody,\n  TableRow,\n  TableCell,\n  Toolbar,\n  InputAdornment,\n} from '@material-ui/core';\nimport useTable from '../../Components/useTable';\nimport * as employeeService from '../../services/EmployeesService';\nimport AddIcon from '@material-ui/icons/Add';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, listUsers, updateUser } from '../../../Action/UserActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../../../constants/UserConstant';\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n  searchInput: {\n    width: '75%',\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px',\n  },\n}));\n\nconst headCells = [\n  { id: 'name', label: 'User Name' },\n  { id: 'email', label: 'Email Address (Personal)' },\n  { id: 'Admin', label: 'User Status', disableSorting: true },\n  { id: 'Candidate', label: 'Candidate', disableSorting: true },\n  { id: 'actions', label: 'Actions ', disableSorting: true },\n];\n\nconst Employees = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate,\n  } = userUpdate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // const userDetails = useSelector((state) => state.userDetails);\n  // const { user, loading: userLoading, error: userError } = userDetails;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_PROFILE_RESET });\n      history.push('/admin/users/');\n    } else {\n      if (userInfo && userInfo.isAdmin) {\n        dispatch(listUsers());\n      } else {\n        history.push('/login');\n      }\n    }\n  }, [dispatch, userInfo, successUpdate, history, successDelete]);\n\n  const classes = useStyles();\n\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(users);\n  const [filterFn, setFilterFn] = useState({\n    fn: (items) => {\n      return items;\n    },\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: '',\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n\n  const {\n    TblPagination,\n    TblContainer,\n    TblHeader,\n    recordsAfterPaginationSorting,\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = (e) => {\n    let target = e.target;\n    setFilterFn({\n      fn: (items) => {\n        if (target.value === '') {\n          return items;\n        } else {\n          return items.filter((x) => x.fullName.includes(target.value));\n        }\n      },\n    });\n  };\n  const addOrEdit = (user, resetForm) => {\n    if (user.id === 0) {\n      console.log('Added user');\n    } else {\n      dispatch(updateUser(user.id));\n      setRecordForEdit(null);\n      resetForm();\n      setOpenPopup(false);\n      setRecords(users);\n      setNotify({\n        isOpen: true,\n        message: 'Submitted Successfully',\n        type: 'success',\n      });\n    }\n  };\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = (id) => {\n    setConfirmDialog({\n      ...confirmDialog,\n      isOpen: false,\n    });\n    dispatch(deleteUser(id));\n    setRecords(users);\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error',\n    });\n  };\n  return (\n    <>\n      {loading ? (\n        <LoadingSpinner asOverlay />\n      ) : error ? (\n        <Card>{error}</Card>\n      ) : (\n        <Paper className={classes.pageContent}>\n          <Toolbar>\n            <Controls.Input\n              className={classes.searchInput}\n              label='Search User'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={handleSearch}\n            />\n            <Controls.Button\n              className={classes.newButton}\n              text='Add New'\n              variant='outlined'\n              startIcon={<AddIcon />}\n              onClick={() => setOpenPopup(true)}\n            />\n          </Toolbar>\n          <TblContainer>\n            <TblHeader />\n            <TableBody>\n              {recordsAfterPaginationSorting().map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>{item.name}</TableCell>\n                  <TableCell>{item.email}</TableCell>\n                  <TableCell>{item.isAdmin ? 'Yes' : 'No'}</TableCell>\n                  <TableCell>{item.isCandidate ? 'Yes' : 'No'}</TableCell>\n                  <TableCell>\n                    <Controls.ActionButton color='primary'>\n                      <EditOutlined\n                        fontsize='small'\n                        onClick={() => {\n                          openInPopup(item);\n                        }}\n                      />\n                    </Controls.ActionButton>\n                    <Controls.ActionButton\n                      onClick={() => {\n                        setConfirmDialog({\n                          isOpen: true,\n                          title: 'Are you sure to delete this record?',\n                          subTitle: \"You can't undo this operation!\",\n                          onConfirm: () => {\n                            onDelete(item.id);\n                          },\n                        });\n                        // onDelete(item.id);\n                      }}\n                      color='secondary'>\n                      <DeleteOutline fontsize='small' />\n                    </Controls.ActionButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </TblContainer>\n          <TblPagination />\n        </Paper>\n      )}\n      <Popup\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        title='User Form'>\n        <EmployeesForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n      <ConfirmDialog\n        confirmDialog={confirmDialog}\n        setConfirmDialog={setConfirmDialog}\n      />\n    </>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}