{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { listPostDetails } from '../Action/PostActions';\nimport { CandidateCreate } from '../Action/CandidateActions';\nimport { CandidateUpdate, getCandidateDetails } from '../Action/CandidateActions';\nimport { CANDIDATE_UPDATE_RESET } from '../constants/CandidatesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApplyScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const postId = match.params.id;\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [whyApply, setReason] = useState();\n  const dispatch = useDispatch();\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post\n  } = postDetails;\n  useEffect(() => {\n    if (successCreated) {\n      dispatch({\n        type: APPLY_CREATE_RESET\n      });\n      history.push('/');\n    } else {\n      if (!post.title || post.id !== Number(postId)) {\n        dispatch(listPostDetails(postId));\n      }\n    }\n  }, [dispatch, post, postId, history, successCreated]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(dispatch(CandidateCreate(post.id, whyApply)));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: [errorCreated && /*#__PURE__*/_jsxDEV(Card, {\n            children: errorCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this), loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 32\n          }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'seagreen',\n                  marginRight: '10px'\n                },\n                children: candidate.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), ' ', \"application\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"reason\",\n                children: \"Why this Post?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"reason\",\n                placeholder: \"Write a reason\",\n                value: whyApply,\n                onChange: e => setReason(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SUBMIT APPLICATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplyScreen, \"ijjMVCxNQtt4VFQ0RGpaEhX3OiA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ApplyScreen;\nexport default _c2 = withRouter(ApplyScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApplyScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","withRouter","Card","LoadingSpinner","APPLY_CREATE_RESET","Notification","listPostDetails","CandidateCreate","CandidateUpdate","getCandidateDetails","CANDIDATE_UPDATE_RESET","ApplyScreen","match","history","postId","params","id","notify","setNotify","isOpen","message","type","whyApply","setReason","dispatch","candidateDetails","state","loading","error","candidate","createApplication","success","successCreated","loadingCreated","errorCreated","postDetails","post","push","title","Number","updateSubmitHandler","e","preventDefault","color","marginRight","name","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\n\nimport Notification from '../shared/components/UIElements/Notification';\nimport { listPostDetails } from '../Action/PostActions';\nimport { CandidateCreate } from '../Action/CandidateActions';\n\nimport {\n  CandidateUpdate,\n  getCandidateDetails,\n} from '../Action/CandidateActions';\nimport { CANDIDATE_UPDATE_RESET } from '../constants/CandidatesConstants';\n\nfunction ApplyScreen({ match, history }) {\n\n\n\n  const postId = match.params.id;\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n\n\n const [whyApply, setReason] = useState()\n\n  const dispatch = useDispatch();\n\n  const candidateDetails = useSelector((state) => state.candidateDetails);\n  const { loading, error, candidate } = candidateDetails;\n\n\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post } = postDetails;\n  \n\n\n  useEffect(() => {\n    if (successCreated) {\n      dispatch({ type: APPLY_CREATE_RESET });\n      history.push('/');\n    } else {\n      if (!post.title || post.id !== Number(postId)) {\n        dispatch(listPostDetails(postId));\n      } \n    }\n  }, [dispatch, post,postId , history, successCreated]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      dispatch(CandidateCreate(post.id,whyApply))\n    );\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n  };\n  return (\n    <div>\n      <form onSubmit={updateSubmitHandler}>\n        <div className='login-form-register'>\n          <div className='container-form'>\n            {errorCreated && <Card>{errorCreated}</Card>}\n            {loadingCreated && <LoadingSpinner asOverlay />}\n            {loading ? (\n              <LoadingSpinner />\n            ) : error ? (\n              <Card>{error}</Card>\n            ) : (\n              <div className='form-all'>\n                <h2>\n                  <span style={{ color: 'seagreen', marginRight: '10px' }}>\n                    {candidate.name}\n                  </span>{' '}\n                  application{' '}\n                </h2>\n\n                \n                <div className='form-control'>\n                  <label htmlFor='reason'>Why this Post?</label>\n                  <textarea\n                    type='text'\n                    id='reason'\n                    placeholder='Write a reason'\n                    value={whyApply}\n                    onChange={(e) => setReason(e.target.value)}\n                  />\n                </div>\n                  \n\n                <Button type='submit'>SUBMIT APPLICATION</Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </form>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n\nexport default withRouter(ApplyScreen);\n"]},"metadata":{},"sourceType":"module"}