{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/offiaclreact/src/screen/EditCandidateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { Link } from 'react-router-dom';\nimport { CandidateUpdate, getCandidateDetails } from '../Action/CandidateActions';\nimport { CANDIDATE_UPDATE_RESET } from '../constants/CandidatesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCandidateScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const candidateId = match.params.id;\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n  const [address, setAddress] = useState('');\n  const [bio, setBio] = useState('');\n  const [whyApply, setReason] = useState('');\n  const [isPass, setIsPass] = useState(false);\n  const dispatch = useDispatch();\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const updateCandidate = useSelector(state => state.updateCandidate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = updateCandidate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: CANDIDATE_UPDATE_RESET\n      });\n      history.push('/admin/candidatelist');\n    } else {\n      if (!candidate.name || candidate.id !== Number(candidateId)) {\n        dispatch(getCandidateDetails(candidateId));\n      } else {\n        setTitle(candidate.title);\n        setName(candidate.name);\n        setEmail(candidate.candidate_email);\n        setAddress(candidate.address);\n        setBio(candidate.bio);\n        setReason(candidate.whyApply);\n        setIsPass(candidate.isPass);\n      }\n    }\n  }, [dispatch, candidate, candidateId, history, successUpdate]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(CandidateUpdate({\n      id: candidate.id,\n      name,\n      title,\n      candidate_email,\n      address,\n      bio,\n      whyApply,\n      isPass\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin/candidatelist\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              left: '200px',\n              outline: 'none',\n              top: '170px'\n            },\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            children: \"GO BACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: [errorUpdate && /*#__PURE__*/_jsxDEV(Card, {\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 31\n          }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'seagreen',\n                  marginRight: '10px'\n                },\n                children: candidate.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), ' ', \"application\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                placeholder: \"Enter Email\",\n                value: candidate_email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \"Enter Address\",\n                value: address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bio\",\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"bio\",\n                placeholder: \"Write a Bio\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"reason\",\n                children: \"Why this Post?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"reason\",\n                placeholder: \"Write a reason\",\n                value: whyApply,\n                onChange: e => setReason(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), userInfo.isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isPass,\n                  onChange: e => setIsPass(e.target.checked),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefault\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"flexSwitchCheckDefault\",\n                  children: \"Pass\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SAVE UPDATES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCandidateScreen, \"2LPNy+h3I9lxnT0nVrxcTFPNsvo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditCandidateScreen;\nexport default _c2 = withRouter(EditCandidateScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditCandidateScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/screen/EditCandidateScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","withRouter","Card","LoadingSpinner","Notification","Link","CandidateUpdate","getCandidateDetails","CANDIDATE_UPDATE_RESET","EditCandidateScreen","match","history","notify","setNotify","isOpen","message","type","candidateId","params","id","name","setName","candidate_email","setEmail","title","setTitle","address","setAddress","bio","setBio","whyApply","setReason","isPass","setIsPass","dispatch","candidateDetails","state","loading","error","candidate","userLogin","userInfo","updateCandidate","success","successUpdate","errorUpdate","loadingUpdate","push","Number","updateSubmitHandler","e","preventDefault","position","left","outline","top","color","marginRight","target","value","isAdmin","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { Link } from 'react-router-dom';\nimport {\n  CandidateUpdate,\n  getCandidateDetails,\n} from '../Action/CandidateActions';\nimport { CANDIDATE_UPDATE_RESET } from '../constants/CandidatesConstants';\n\nfunction EditCandidateScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n\n  const candidateId = match.params.id;\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n  const [address, setAddress] = useState('');\n  const [bio, setBio] = useState('');\n  const [whyApply, setReason] = useState('');\n  const [isPass, setIsPass] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const candidateDetails = useSelector((state) => state.candidateDetails);\n  const { loading, error, candidate } = candidateDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const updateCandidate = useSelector((state) => state.updateCandidate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate,\n  } = updateCandidate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CANDIDATE_UPDATE_RESET });\n      history.push('/admin/candidatelist');\n    } else {\n      if (!candidate.name || candidate.id !== Number(candidateId)) {\n        dispatch(getCandidateDetails(candidateId));\n      } else {\n        setTitle(candidate.title);\n        setName(candidate.name);\n        setEmail(candidate.candidate_email);\n        setAddress(candidate.address);\n        setBio(candidate.bio);\n        setReason(candidate.whyApply);\n        setIsPass(candidate.isPass);\n      }\n    }\n  }, [dispatch, candidate, candidateId, history, successUpdate]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      CandidateUpdate({\n        id: candidate.id,\n        name,\n        title,\n        candidate_email,\n        address,\n        bio,\n        whyApply,\n        isPass,\n      })\n    );\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n  };\n  return (\n    <div>\n      <form onSubmit={updateSubmitHandler}>\n        <div className='login-form-register'>\n          <Link to='/admin/candidatelist'>\n            <button\n              style={{\n                position: 'absolute',\n                left: '200px',\n                outline: 'none',\n                top: '170px',\n              }}\n              type='button'\n              className='btn btn-outline-secondary'>\n              GO BACK\n            </button>\n          </Link>\n          <div className='container-form'>\n            {errorUpdate && <Card>{errorUpdate}</Card>}\n            {loadingUpdate && <LoadingSpinner asOverlay />}\n            {loading ? (\n              <LoadingSpinner />\n            ) : error ? (\n              <Card>{error}</Card>\n            ) : (\n              <div className='form-all'>\n                <h2>\n                  <span style={{ color: 'seagreen', marginRight: '10px' }}>\n                    {candidate.name}\n                  </span>{' '}\n                  application{' '}\n                </h2>\n\n                <div className='form-control'>\n                  <label htmlFor='title'>Post Title</label>\n                  <input\n                    type='text'\n                    id='title'\n                    placeholder='Enter Post Title'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='username'>Name</label>\n                  <input\n                    type='text'\n                    id='username'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className='form-control'>\n                  <label htmlFor='email'>Email</label>\n                  <input\n                    type='email'\n                    id='email'\n                    placeholder='Enter Email'\n                    value={candidate_email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='address'>Address</label>\n                  <input\n                    type='text'\n                    id='address'\n                    placeholder='Enter Address'\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='bio'>Bio</label>\n                  <textarea\n                    type='text'\n                    id='bio'\n                    placeholder='Write a Bio'\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                  />\n                </div>\n                <div className='form-control'>\n                  <label htmlFor='reason'>Why this Post?</label>\n                  <textarea\n                    type='text'\n                    id='reason'\n                    placeholder='Write a reason'\n                    value={whyApply}\n                    onChange={(e) => setReason(e.target.value)}\n                  />\n                </div>\n                {userInfo.isAdmin && (\n                  <div className='form-control'>\n                    <div className='form-check form-switch'>\n                      <input\n                        checked={isPass}\n                        onChange={(e) => setIsPass(e.target.checked)}\n                        className='form-check-input'\n                        type='checkbox'\n                        id='flexSwitchCheckDefault'\n                      />\n                      <label\n                        className='form-check-label'\n                        htmlFor='flexSwitchCheckDefault'>\n                        Pass\n                      </label>\n                    </div>\n                  </div>\n                )}\n\n                <Button type='submit'>SAVE UPDATES</Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </form>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n\nexport default withRouter(EditCandidateScreen);\n"]},"metadata":{},"sourceType":"module"}