{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/POSTS/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { listPosts } from '../../Action/PostActions';\nimport Card from '../../shared/components/UIElements/Card';\nimport PostList from '../components/PostList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [postdata, setPostData] = useState([]);\n  const [isLoadingdata, setIsLoadingdata] = useState(false);\n  const postList = useSelector(state => state.postList);\n  const {\n    error,\n    loading,\n    posts\n  } = postList;\n  useEffect(() => {\n    dispatch(listPosts());\n  }, [dispatch, posts]);\n\n  if (posts) {\n    setPostData(posts);\n    setIsLoadingdata(false);\n  } else {\n    setPostData([]);\n    setIsLoadingdata(true);\n  }\n\n  if (isLoadingdata) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      posts: postdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"2ysRwAgfon/s/fKFLMILT0E6GAc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/POSTS/pages/Post.js"],"names":["React","useEffect","useState","useSelector","useDispatch","LoadingSpinner","listPosts","Card","PostList","Post","dispatch","postdata","setPostData","isLoadingdata","setIsLoadingdata","postList","state","error","loading","posts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMa,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,EAAWS,KAAX,CAFM,CAAT;;AAIA,MAAIA,KAAJ,EAAW;AACTP,IAAAA,WAAW,CAACO,KAAD,CAAX;AACAL,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD,MAGO;AACLF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,MAAID,aAAJ,EAAmB;AACjB,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGK,OAAO,gBACN;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,GAIJD,KAAK,gBACP,QAAC,IAAD;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApCD;;GAAMF,I;UACaL,W,EAIAD,W;;;KALbM,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { listPosts } from '../../Action/PostActions';\nimport Card from '../../shared/components/UIElements/Card';\nimport PostList from '../components/PostList';\n\nconst Post = () => {\n  const dispatch = useDispatch();\n\n  const [postdata, setPostData] = useState([]);\n  const [isLoadingdata, setIsLoadingdata] = useState(false);\n  const postList = useSelector((state) => state.postList);\n  const { error, loading, posts } = postList;\n\n  useEffect(() => {\n    dispatch(listPosts());\n  }, [dispatch, posts]);\n\n  if (posts) {\n    setPostData(posts);\n    setIsLoadingdata(false);\n  } else {\n    setPostData([]);\n    setIsLoadingdata(true);\n  }\n\n  if (isLoadingdata) {\n    return <LoadingSpinner />;\n  }\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className='center'>\n          <LoadingSpinner asOverlay />\n        </div>\n      ) : error ? (\n        <Card>{error}</Card>\n      ) : (\n        <PostList posts={postdata} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}