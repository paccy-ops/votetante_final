{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreatePostVote, listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport Button from '../shared/components/FormElements/Button';\nimport { POST_CREATE_VOTE_RESET } from '../constants/PostConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VotingScreenPage = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [cast, setCast] = useState();\n  const [loadingData, setLoadingData] = useState(false);\n  const postId = match.params.id;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const votePost = useSelector(state => state.votePost);\n  const {\n    success: successCreatedVote,\n    loading: loadingCreatedVote,\n    error: errorCreatedVote,\n    cast: casted\n  } = votePost;\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreatedVote) {\n      setCast('');\n      dispatch({\n        type: POST_CREATE_VOTE_RESET\n      });\n      history.push('/');\n    } else {\n      dispatch(listPostDetails(postId));\n\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreatedVote, userInfo]);\n\n  const votingSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(CreatePostVote(postId)); // \n  }; // if (loadingData) {\n  //   return <LoadingSpinner asOverlay />;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-secondary dropdown-toggle\",\n        type: \"button\",\n        id: \"dropdownMenuButton1\",\n        \"data-bs-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        children: \"Dropdown button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenuButton1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"dropdown-item\",\n            href: \"#\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"dropdown-item\",\n            href: \"#\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"dropdown-item\",\n            href: \"#\",\n            children: \"Something else here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        marginTop: '200px'\n      },\n      onSubmit: votingSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"You are Voting for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '10px',\n            color: 'seagreen'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), \"Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-candidate\",\n        children: [successCreatedVote && /*#__PURE__*/_jsxDEV(Card, {\n          children: casted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }, this), errors && /*#__PURE__*/_jsxDEV(Card, {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this), errorCreatedVote && /*#__PURE__*/_jsxDEV(Card, {\n          children: errorCreatedVote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 26\n        }, this), loadingCreatedVote && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          asOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          asOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), data.map(postCandidate => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: postCandidate.isPass && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: postCandidate.candidate_image,\n                    alt: postCandidate.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: '20px',\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'green'\n                      },\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 27\n                    }, this), postCandidate.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"spn\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"Applied For: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"sp\", {\n                      children: postCandidate.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"E-mail:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this), ' ', postCandidate.candidate_email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontSize: '15px',\n                      width: '90%',\n                      marginLeft: '10px',\n                      fontFamily: 'sans-serif'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        marginRight: '10px',\n                        color: 'seagreen'\n                      },\n                      children: \"Bio:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 27\n                    }, this), postCandidate.bio.slice(1, 100)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      style: {\n                        padding: '20px'\n                      },\n                      value: cast,\n                      onChange: e => setCast(e.target.checked),\n                      class: \"form-check-input\",\n                      type: \"radio\",\n                      name: \"flexRadioDefault\",\n                      id: \"flexRadioDefault1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '18px'\n                      },\n                      class: \"form-check-label\",\n                      for: \"flexRadioDefault1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-vote-yea\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 19\n                      }, this), postCandidate.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !cast,\n          style: {\n            width: '10%'\n          },\n          type: \"submit\",\n          children: \"submit vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VotingScreenPage, \"IqnVt8M7LoaXI6evwlt2rkDYkWc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = VotingScreenPage;\nexport default _c2 = withRouter(VotingScreenPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VotingScreenPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js"],"names":["React","useEffect","useState","Link","withRouter","useSelector","useDispatch","CreatePostVote","listPostDetails","LoadingSpinner","Card","APPLY_CREATE_RESET","Button","POST_CREATE_VOTE_RESET","VotingScreenPage","match","history","dispatch","data","setData","cast","setCast","loadingData","setLoadingData","postId","params","id","postDetails","state","post","loading","errors","userLogin","userInfo","votePost","success","successCreatedVote","loadingCreatedVote","error","errorCreatedVote","casted","type","push","candidates","votingSubmitHandler","e","preventDefault","marginTop","margin","color","title","map","postCandidate","isPass","candidate_image","name","marginLeft","fontSize","candidate_email","width","fontFamily","marginRight","bio","slice","padding","target","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreatePostVote, listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport Button from '../shared/components/FormElements/Button'\nimport { POST_CREATE_VOTE_RESET } from '../constants/PostConstants';\n\nconst VotingScreenPage = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState([]);\n  const [cast, setCast] = useState();\n  const [loadingData, setLoadingData] = useState(false);\n\n  const postId = match.params.id;\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n  \n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const votePost = useSelector((state) => state.votePost);\n  const {\n    success: successCreatedVote,\n    loading: loadingCreatedVote,\n    error: errorCreatedVote,\n    cast:casted\n  } = votePost;\n\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreatedVote) {\n      setCast('')\n      dispatch({type:POST_CREATE_VOTE_RESET})\n      history.push('/');\n    } else {\n      dispatch(listPostDetails(postId));\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreatedVote, userInfo]);\n\n  const votingSubmitHandler = (e) =>{\n    e.preventDefault()\n    dispatch(CreatePostVote(\n      postId\n    ))\n    // \n  }\n  // if (loadingData) {\n  //   return <LoadingSpinner asOverlay />;\n  // }\n\n\n  return (\n\n    <div>\n    <div class=\"dropdown\">\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown button\n  </button>\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n    <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n    <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n    <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n  </ul>\n</div>\n    <form style={{ marginTop: '200px' }} onSubmit={votingSubmitHandler}>\n\n\n   \n        <h1>\n          You are Voting for{' '}\n          <span style={{ margin: '10px', color: 'seagreen' }}>\n            {post.title}\n          </span>\n          Post\n        </h1>\n    \n\n      <div className='section-candidate'>\n       \n      {successCreatedVote&&<Card>{casted}</Card>}\n      {errors&&<Card>{errors}</Card>}\n      {errorCreatedVote&&<Card>{errorCreatedVote}</Card>}\n      {loadingCreatedVote&&<LoadingSpinner asOverlay/>}\n      {loading&&<LoadingSpinner asOverlay/>}\n          {data.map((postCandidate) => {\n            return (\n              <div>\n                {postCandidate.isPass && (\n                  <div className='posts'>\n                    <div className='description'>\n                      <div>\n                        <img\n                          src={postCandidate.candidate_image}\n                          alt={postCandidate.name}\n                        />\n                        <span style={{ marginLeft: '20px', fontSize: '12px' }}>\n                          <span style={{ color: 'green' }}>Name:</span>\n                          {postCandidate.name}\n                        </span>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <spn style={{ color: '#000' }}>Applied For: </spn>\n                          <sp>{postCandidate.title}</sp>\n                        </h4>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <span style={{ color: '#000' }}>E-mail:</span>{' '}\n                          {postCandidate.candidate_email}\n                        </h4>\n\n                        <p\n                          style={{\n                            fontSize: '15px',\n                            width: '90%',\n                            marginLeft: '10px',\n                            fontFamily: 'sans-serif',\n                          }}>\n                          <span\n                            style={{\n                              marginRight: '10px',\n                              color: 'seagreen',\n                            }}>\n                            Bio:\n                          </span>\n                          {postCandidate.bio.slice(1, 100)}\n                        </p>\n\n                        <div class=\"form-check\">\n                  <input style={{padding:'20px'}} value={cast} onChange={(e) => setCast(e.target.checked)} class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\"/>\n                  <label style={{fontSize:'18px'}} class=\"form-check-label\" for=\"flexRadioDefault1\">\n                  <i class=\"fas fa-vote-yea\"></i>{postCandidate.name}\n                  </label>\n                </div>\n                                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n          \n          <Button disabled={!cast} style={{width:'10%'}}  type=\"submit\">submit vote</Button>\n\n      </div>\n      \n    </form>\n    </div>\n  );\n};\n\nexport default withRouter(VotingScreenPage);\n"]},"metadata":{},"sourceType":"module"}