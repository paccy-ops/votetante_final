{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { postCreateReducers, postDeleteReducers, postDetailReducers, postListReducers, postUpdateReducers } from './reducers/PostReducers';\nimport { userUpdateProfileReducer, userDeleteReducer, userDetailsReducers, userListReducer, userLoginReducers, userRegisterReducers, userUpdateReducer } from './reducers/UserReducer';\nimport { candidateDeleteReducers, CandidateDetailsReducers, candidateUpdateReducers, listCandidatesReducer, postCreateApplicationReducers } from './reducers/CandidateReducers';\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete: postDeleteReducers,\n  postCreate: postCreateReducers,\n  postDetails: postDetailReducers,\n  postUpdate: postUpdateReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList: listCandidatesReducer,\n  createApplication: postCreateApplicationReducers,\n  candidateDetails: CandidateDetailsReducers,\n  updateCandidate: candidateUpdateReducers,\n  deleteCandidate: candidateDeleteReducers\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","postCreateReducers","postDeleteReducers","postDetailReducers","postListReducers","postUpdateReducers","userUpdateProfileReducer","userDeleteReducer","userDetailsReducers","userListReducer","userLoginReducers","userRegisterReducers","userUpdateReducer","candidateDeleteReducers","CandidateDetailsReducers","candidateUpdateReducers","listCandidatesReducer","postCreateApplicationReducers","reducer","postList","postDelete","postCreate","postDetails","postUpdate","userLogin","userRegister","userList","userDetails","userDelete","userUpdateProfile","userUpdate","candidatesList","createApplication","candidateDetails","updateCandidate","deleteCandidate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,gBAJF,EAKEC,kBALF,QAMO,yBANP;AAOA,SACEC,wBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,oBANF,EAOEC,iBAPF,QAQO,wBARP;AASA,SACEC,uBADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,6BALF,QAMO,8BANP;AAQA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC9BsB,EAAAA,QAAQ,EAAEf,gBADoB;AAE9BgB,EAAAA,UAAU,EAAElB,kBAFkB;AAG9BmB,EAAAA,UAAU,EAAEpB,kBAHkB;AAI9BqB,EAAAA,WAAW,EAAEnB,kBAJiB;AAK9BoB,EAAAA,UAAU,EAAElB,kBALkB;AAM9BmB,EAAAA,SAAS,EAAEd,iBANmB;AAO9Be,EAAAA,YAAY,EAAEd,oBAPgB;AAQ9Be,EAAAA,QAAQ,EAAEjB,eARoB;AAS9BkB,EAAAA,WAAW,EAAEnB,mBATiB;AAU9BoB,EAAAA,UAAU,EAAErB,iBAVkB;AAW9BsB,EAAAA,iBAAiB,EAAEvB,wBAXW;AAY9BwB,EAAAA,UAAU,EAAElB,iBAZkB;AAa9BmB,EAAAA,cAAc,EAAEf,qBAbc;AAc9BgB,EAAAA,iBAAiB,EAAEf,6BAdW;AAe9BgB,EAAAA,gBAAgB,EAAEnB,wBAfY;AAgB9BoB,EAAAA,eAAe,EAAEnB,uBAhBa;AAiB9BoB,EAAAA,eAAe,EAAEtB;AAjBa,CAAD,CAA/B;AAoBA,MAAMuB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEjB,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEN;AAAZ;AAAb,CAArB;AACA,MAAMO,UAAU,GAAG,CAAC5C,KAAD,CAAnB;AAEA,MAAM6C,KAAK,GAAGhD,WAAW,CACvBsB,OADuB,EAEvBuB,YAFuB,EAGvBzC,mBAAmB,CAACF,eAAe,CAAC,GAAG6C,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  postCreateReducers,\n  postDeleteReducers,\n  postDetailReducers,\n  postListReducers,\n  postUpdateReducers,\n} from './reducers/PostReducers';\nimport {\n  userUpdateProfileReducer,\n  userDeleteReducer,\n  userDetailsReducers,\n  userListReducer,\n  userLoginReducers,\n  userRegisterReducers,\n  userUpdateReducer,\n} from './reducers/UserReducer';\nimport {\n  candidateDeleteReducers,\n  CandidateDetailsReducers,\n  candidateUpdateReducers,\n  listCandidatesReducer,\n  postCreateApplicationReducers,\n} from './reducers/CandidateReducers';\n\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete: postDeleteReducers,\n  postCreate: postCreateReducers,\n  postDetails: postDetailReducers,\n  postUpdate: postUpdateReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList: listCandidatesReducer,\n  createApplication: postCreateApplicationReducers,\n  candidateDetails: CandidateDetailsReducers,\n  updateCandidate: candidateUpdateReducers,\n  deleteCandidate: candidateDeleteReducers,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}