{"ast":null,"code":"import { POST_LIST_SUCCESS, POST_LIST_REQUEST, POST_LIST_FAIL //\n, POST_DETAIL_SUCCESS, POST_DETAIL_REQUEST, POST_DETAIL_FAIL //\n, POST_DELETE_SUCCESS, POST_DELETE_REQUEST, POST_DELETE_FAIL //\n, POST_CREATE_SUCCESS, POST_CREATE_REQUEST, POST_CREATE_FAIL //\n, POST_UPDATE_SUCCESS, POST_UPDATE_REQUEST, POST_UPDATE_FAIL //\n//\n, POST_CREATE_VOTE_REQUEST, POST_CREATE_VOTE_SUCCESS, POST_CREATE_VOTE_FAIL } from '../constants/PostConstants';\nimport axios from 'axios';\nexport const listPosts = () => async dispatch => {\n  try {\n    dispatch({\n      type: POST_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(process.env.REACT_APP_BACKEND_URL + '/posts/');\n    dispatch({\n      type: POST_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listPostDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: POST_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/posts/${id}`);\n    dispatch({\n      type: POST_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deletePost = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/posts/delete/${id}`, config);\n    dispatch({\n      type: POST_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // create post\n\nexport const PostCreate = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(process.env.REACT_APP_BACKEND_URL + '/posts/create/', {}, config);\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const PostUpdate = post => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`${process.env.REACT_APP_BACKEND_URL}/posts/update/${post.id}/`, post, config);\n    dispatch({\n      type: POST_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: POST_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const CreatePostVote = (candidateId, cast) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_CREATE_VOTE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/posts/${candidateId}/cast/`, cast, config);\n    dispatch({\n      type: POST_CREATE_VOTE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_VOTE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/Action/PostActions.js"],"names":["POST_LIST_SUCCESS","POST_LIST_REQUEST","POST_LIST_FAIL","POST_DETAIL_SUCCESS","POST_DETAIL_REQUEST","POST_DETAIL_FAIL","POST_DELETE_SUCCESS","POST_DELETE_REQUEST","POST_DELETE_FAIL","POST_CREATE_SUCCESS","POST_CREATE_REQUEST","POST_CREATE_FAIL","POST_UPDATE_SUCCESS","POST_UPDATE_REQUEST","POST_UPDATE_FAIL","POST_CREATE_VOTE_REQUEST","POST_CREATE_VOTE_SUCCESS","POST_CREATE_VOTE_FAIL","axios","listPosts","dispatch","type","data","get","process","env","REACT_APP_BACKEND_URL","payload","error","response","detail","message","listPostDetails","id","deletePost","getState","userLogin","userInfo","config","headers","Authorization","token","delete","PostCreate","post","PostUpdate","patch","CreatePostVote","candidateId","cast"],"mappings":"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","sourcesContent":["import {\n  POST_LIST_SUCCESS,\n  POST_LIST_REQUEST,\n  POST_LIST_FAIL,\n  //\n  POST_DETAIL_SUCCESS,\n  POST_DETAIL_REQUEST,\n  POST_DETAIL_FAIL,\n\n  //\n  POST_DELETE_SUCCESS,\n  POST_DELETE_REQUEST,\n  POST_DELETE_FAIL,\n\n  //\n  POST_CREATE_SUCCESS,\n  POST_CREATE_REQUEST,\n  POST_CREATE_FAIL,\n\n  //\n  POST_UPDATE_SUCCESS,\n  POST_UPDATE_REQUEST,\n  POST_UPDATE_FAIL,\n\n  //\n  //\n  POST_CREATE_VOTE_REQUEST,\n  POST_CREATE_VOTE_SUCCESS,\n  POST_CREATE_VOTE_FAIL,\n} from '../constants/PostConstants';\nimport axios from 'axios';\nexport const listPosts = () => async (dispatch) => {\n  try {\n    dispatch({ type: POST_LIST_REQUEST });\n    const { data } = await axios.get(\n      process.env.REACT_APP_BACKEND_URL + '/posts/'\n    );\n    dispatch({ type: POST_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: POST_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listPostDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: POST_DETAIL_REQUEST });\n\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_BACKEND_URL}/posts/${id}`\n    );\n\n    dispatch({ type: POST_DETAIL_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: POST_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deletePost = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(\n      `${process.env.REACT_APP_BACKEND_URL}/posts/delete/${id}`,\n      config\n    );\n\n    dispatch({\n      type: POST_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// create post\n\nexport const PostCreate = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      process.env.REACT_APP_BACKEND_URL + '/posts/create/',\n      {},\n      config\n    );\n\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const PostUpdate = (post) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.patch(\n      `${process.env.REACT_APP_BACKEND_URL}/posts/update/${post.id}/`,\n      post,\n      config\n    );\n\n    dispatch({\n      type: POST_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: POST_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const CreatePostVote = (candidateId, cast) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: POST_CREATE_VOTE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_BACKEND_URL}/posts/${candidateId}/cast/`,\n      cast,\n      config\n    );\n\n    dispatch({\n      type: POST_CREATE_VOTE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_VOTE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}