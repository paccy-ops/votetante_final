{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/FormElements/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from './Button';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = props => {\n  _s();\n\n  const [image, setImage] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!image) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(image);\n  }, [image]);\n\n  const pickedHandler = async event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      const formData = new FormData();\n      formData.append('file', pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        const {\n          data\n        } = await axios.post('/api/users/upload/', formData, config);\n        setImage(data);\n      } catch (error) {\n        setIsValid(false);\n        fileIsValid = false;\n      }\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      ref: filePickerRef,\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: \".jpg,.png,.jpeg\",\n      onChange: pickedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-upload ${props.center && 'center'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload__preview\",\n        children: [previewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }, this), !previewUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please pick an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        hidden: true,\n        onClick: pickImageHandler,\n        children: \"PICK IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageUpload, \"CdFIAJBl6Kpsh4C361WRpbuuzZw=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/FormElements/ImageUpload.js"],"names":["React","useRef","useState","useEffect","axios","Button","ImageUpload","props","image","setImage","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","formData","FormData","append","config","headers","data","post","error","onInput","id","pickImageHandler","current","click","display","center","errorText"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n  const [image, setImage] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!image) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(image);\n  }, [image]);\n\n  const pickedHandler = async (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      const formData = new FormData();\n\n      formData.append('file', pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        };\n        const { data } = await axios.post(\n          '/api/users/upload/',\n          formData,\n          config\n        );\n        setImage(data);\n      } catch (error) {\n        setIsValid(false);\n        fileIsValid = false;\n      }\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className='form-control'>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type='file'\n        accept='.jpg,.png,.jpeg'\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className='image-upload__preview'>\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        {!isValid && (\n          <Button type='button' hidden={true} onClick={pickImageHandler}>\n            PICK IMAGE\n          </Button>\n        )}\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}