{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../shared/components/FormElements/Input';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../shared/util/validators';\nimport { useForm } from '../shared/hooks/form-hook';\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfileScreen({\n  history\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const useDetails = useSelector(state => state.useDetails);\n  const {\n    loading,\n    error,\n    user\n  } = useDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const [loadedPlace, setLoadedPlace] = useState({});\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    },\n    passwordConfirm: {\n      value: '',\n      isValid: false\n    },\n    name: {\n      value: '',\n      isValid: false\n    },\n    location: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: '',\n      isValid: false\n    },\n    bio: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setLoadedPlace(user);\n        setFormData({\n          email: {\n            value: loadedPlace.email,\n            isValid: true\n          },\n          password: {\n            value: user.password,\n            isValid: true\n          },\n          passwordConfirm: {\n            value: user.password,\n            isValid: true\n          },\n          name: {\n            value: user.name,\n            isValid: true\n          },\n          location: {\n            value: user.location,\n            isValid: true\n          },\n          bio: {\n            value: user.bio,\n            isValid: true\n          }\n        }, true);\n      }\n    }\n  }, [dispatch, userInfo, user, history, setFormData, success]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n\n    if (formState.inputs.password.value !== formState.inputs.passwordConfirm.value) {\n      setMessage(\" Password don't match\");\n    } else {\n      // dispatch({\n      //   id:user.id,\n      //   name:user.name,\n      //   email:user.email,\n      //   location:user.location,\n      //   bio:user.bio,\n      //   password:user.password,\n      // })\n      console.log(loadedPlace.name);\n      history.push('/user/profile');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updateSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"EDIT YOUR PROFILE  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            placeholder: \"Enter Name\",\n            validators: [VALIDATOR_REQUIRE()],\n            errorText: \"Name Required\",\n            onInput: inputHandler,\n            initialValue: loadedPlace.name,\n            initialValid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"email\",\n            type: \"email\",\n            label: \"E-Mail\",\n            placeholder: \"Enter E-Mail\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Please enter a valid email address.\",\n            onInput: inputHandler,\n            initialValue: loadedPlace.email,\n            initialValid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"location\",\n            type: \"text\",\n            label: \"Address(Country/City)\",\n            placeholder: \"Enter Address\",\n            errorText: \"Address Required\",\n            validators: [VALIDATOR_REQUIRE()],\n            onInput: inputHandler,\n            initialValue: loadedPlace.location,\n            initialValid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"\",\n            id: \"bio\",\n            type: \"text\",\n            label: \"Bio\",\n            placeholder: \"Enter Bio\",\n            validators: [VALIDATOR_REQUIRE()],\n            errorText: \"Bio Required\",\n            onInput: inputHandler,\n            initialValue: loadedPlace.bio,\n            initialValid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Enter Password\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Please enter a valid password, at least 6 characters.\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"passwordConfirm\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            placeholder: \"Enter Password again\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Password don't match\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !formState.isValid,\n            children: \"SAVE PROFILE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfileScreen, \"AzERGURB2d1IGRpSo8QHj6WxE9U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js"],"names":["React","useEffect","useState","Input","Button","useSelector","useDispatch","Card","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","EditProfileScreen","history","message","setMessage","dispatch","useDetails","state","loading","error","user","userLogin","userInfo","loadedPlace","setLoadedPlace","userUpdateProfile","success","formState","inputHandler","setFormData","email","value","isValid","password","passwordConfirm","name","location","image","bio","push","type","updateSubmitHandler","e","preventDefault","inputs","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Input from '../shared/components/FormElements/Input';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../shared/util/validators';\nimport { useForm } from '../shared/hooks/form-hook';\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nfunction EditProfileScreen({ history }) {\n \n  const [message, setMessage] = useState('');\n  \n\n  const dispatch = useDispatch()\n\n  const useDetails = useSelector(state => state.useDetails)\n  const {loading,error,user} = useDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const {userInfo} = userLogin\n\n  const [loadedPlace, setLoadedPlace] = useState({});\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const {success} = userUpdateProfile\n\n\n\n\n  const [formState, inputHandler,setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n      passwordConfirm: {\n        value: '',\n        isValid: false,\n      },\n      name: {\n        value: '',\n        isValid: false,\n      },\n\n      location: {\n        value: '',\n        isValid: false,\n      },\n\n      image: {\n        value: '',\n        isValid: false,\n      },\n\n      bio: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    if(!userInfo){\n  history.push('/login')\n    }else{\n      if(!user || !user.name||success){\n        dispatch({type:USER_UPDATE_PROFILE_RESET})\n        dispatch(getUserDetails('profile')) \n        \n      }else{\n        setLoadedPlace(user)\n        setFormData({\n          email: {\n            value: loadedPlace.email,\n            isValid: true,\n          },\n          password: {\n            value: user.password,\n            isValid: true,\n          },\n          passwordConfirm: {\n            value: user.password,\n            isValid: true,\n          },\n          name: {\n            value: user.name,\n            isValid: true,\n          },\n    \n          location: {\n            value: user.location,\n            isValid: true,\n          },\n    \n          bio: {\n            value: user.bio,\n            isValid: true,\n          },\n          \n        },true)\n      }\n    }\n    \n    \n  }, [dispatch,userInfo,user,history,setFormData,success])\n  \n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n    if( formState.inputs.password.value !== formState.inputs.passwordConfirm.value){\n      setMessage(\" Password don't match\")\n\n    }else{\n      // dispatch({\n      //   id:user.id,\n      //   name:user.name,\n      //   email:user.email,\n      //   location:user.location,\n      //   bio:user.bio,\n      //   password:user.password,\n      // })\n      console.log(loadedPlace.name)\n      history.push('/user/profile')\n    }\n    \n  };\n  return (\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n          <div className='form-all'>\n            <h2>EDIT YOUR PROFILE  </h2>\n            {message&&<Card className='error_message'>{message}</Card>}\n            {error && <Card className='error_message'>{error}</Card>}\n            {loading && <LoadingSpinner asOverlay />}\n            <Input\n              element='input'\n              id='name'\n              type='text'\n              label='Name'\n              placeholder='Enter Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Name Required'\n              onInput={inputHandler}\n              initialValue={loadedPlace.name}\n              initialValid={true}\n            />\n            <Input\n              element='input'\n              id='email'\n              type='email'\n              label='E-Mail'\n              placeholder='Enter E-Mail'\n              validators={[VALIDATOR_EMAIL()]}\n              errorText='Please enter a valid email address.'\n              onInput={inputHandler}\n              initialValue={loadedPlace.email}\n              initialValid={true}\n            />\n\n            <Input\n            element='input'\n            id='location'\n            type='text'\n            label='Address(Country/City)'\n            placeholder='Enter Address'\n            errorText='Address Required'\n            validators={[VALIDATOR_REQUIRE()]}\n            onInput={inputHandler}\n            initialValue={loadedPlace.location}\n            initialValid={true} \n          />\n          <Input\n          element=''\n          id='bio'\n          type='text'\n          label='Bio'\n          placeholder='Enter Bio'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Bio Required'\n          onInput={inputHandler}\n          initialValue={loadedPlace.bio}\n          initialValid={true}\n        />\n      \n            <Input\n              element='input'\n              id='password'\n              type='password'\n              label='Password'\n              placeholder='Enter Password'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText='Please enter a valid password, at least 6 characters.'\n              onInput={inputHandler}\n            />\n            <Input\n              element='input'\n              id='passwordConfirm'\n              type='password'\n              label='Confirm Password'\n              placeholder='Enter Password again'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText=\"Password don't match\"\n              onInput={inputHandler}\n            />\n            <Button type='submit' disabled={!formState.isValid}>\n              SAVE PROFILE\n            </Button>\n\n            \n              \n            \n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\n\n\nexport default EditProfileScreen;\n"]},"metadata":{},"sourceType":"module"}