{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/EmployeesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Controls from '../../controls/Controls'; // const GenderItem = [\n//   { id: 'male', title: 'male' },\n//   { id: 'female', title: 'Female' },\n//   { id: 'other', title: 'Other' },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  location: '',\n  isAdmin: false,\n  isCandidate: false\n};\n\nconst EmployeesForm = props => {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors\n    };\n    if ('name' in fieldsValues) temp.name = fieldsValues.name ? '' : 'This field is required.';\n    if ('email' in fieldsValues) temp.email = /$^|.+@.+..+/.test(fieldsValues.email) ? '' : 'Email is not field'; // if ('mobile' in fieldsValues)\n    //   temp.mobile =\n    //     fieldsValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required';\n    // if ('departmentId' in fieldsValues)\n    //   temp.departmentId =\n    //     fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n\n    setErrors({ ...temp\n    });\n    if (fieldsValues === values) return Object.values(temp).every(x => x === '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = Useform(initialValues, true, validate);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      marginTop: '120px',\n      marginLeft: '20%'\n    },\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"fullName\",\n          label: \"Full name\",\n          value: values.name,\n          error: errors.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Address\",\n          name: \"location\",\n          value: values.location,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.CheckBox, {\n          name: \"isAdmin\",\n          label: \"Admin \",\n          value: values.isAdmin,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.CheckBox, {\n          name: \"isCandidate\",\n          label: \"Candidate\",\n          value: values.isCandidate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            onClick: resetForm,\n            color: \"default\",\n            text: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeesForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EmployeesForm;\nexport default EmployeesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesForm\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/EmployeesForm.js"],"names":["React","useEffect","Grid","Useform","Form","Controls","initialValues","id","name","email","location","isAdmin","isCandidate","EmployeesForm","props","addOrEdit","recordForEdit","validate","fieldsValues","values","temp","errors","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","event","preventDefault","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Controls from '../../controls/Controls'\n\n// const GenderItem = [\n//   { id: 'male', title: 'male' },\n//   { id: 'female', title: 'Female' },\n//   { id: 'other', title: 'Other' },\n// ];\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  location: '',\n  isAdmin: false,\n  isCandidate: false,\n};\n\nconst EmployeesForm = (props) => {\n  const { addOrEdit, recordForEdit } = props;\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors };\n    if ('name' in fieldsValues)\n      temp.name = fieldsValues.name ? '' : 'This field is required.';\n    if ('email' in fieldsValues)\n      temp.email = /$^|.+@.+..+/.test(fieldsValues.email)\n        ? ''\n        : 'Email is not field';\n    // if ('mobile' in fieldsValues)\n    //   temp.mobile =\n    //     fieldsValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required';\n    // if ('departmentId' in fieldsValues)\n    //   temp.departmentId =\n    //     fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n    setErrors({\n      ...temp,\n    });\n    if (fieldsValues === values)\n      return Object.values(temp).every((x) => x === '');\n  };\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  } = Useform(initialValues, true, validate);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({\n        ...recordForEdit,\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return (\n    <Form style={{marginTop:'120px',marginLeft:'20%'}} onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='fullName'\n            label='Full name'\n            value={values.name}\n            error={errors.name}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            label='Email'\n            name='email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n        \n          <Controls.Input\n            label='Address'\n            name='location'\n            value={values.location}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n         \n          \n          \n          <Controls.CheckBox\n            name='isAdmin'\n            label='Admin '\n            value={values.isAdmin}\n            onChange={handleInputChange}\n          />\n\n           \n          <Controls.CheckBox\n            name='isCandidate'\n            label='Candidate'\n            value={values.isCandidate}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.Button type='submit' text='Submit' />\n            <Controls.Button onClick={resetForm} color='default' text='Reset' />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default EmployeesForm;\n"]},"metadata":{},"sourceType":"module"}