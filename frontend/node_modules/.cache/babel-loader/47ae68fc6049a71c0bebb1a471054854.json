{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/ConfirmDialog.js\",\n    _s = $RefreshSig$();\n\nimport { Dialog, DialogTitle, DialogActions, DialogContent, Typography, makeStyles, IconButton } from '@material-ui/core';\nimport Controls from '../../controls/Controls';\nimport React from 'react';\nimport { NotListedLocation } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    position: 'absolute',\n    top: theme.spacing(5),\n    padding: theme.spacing(2)\n  },\n  dialogContent: {\n    textAlign: 'center'\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  },\n  dialogActions: {\n    justifyContent: 'center'\n  },\n  titleIcon: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.main,\n    marginLeft: '30px',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n      cursor: 'default'\n    },\n    '& .MuiSvgIcon-root': {\n      fontSize: '8rem'\n    }\n  }\n}));\n\nconst ConfirmDialog = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    confirmDialog,\n    setConfirmDialog\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: confirmDialog.isOpen,\n    classes: {\n      paper: classes.dialog\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.dialogTitle,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        disableRipple: true,\n        className: classes.titleIcon,\n        children: /*#__PURE__*/_jsxDEV(NotListedLocation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.dialogContent,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        children: confirmDialog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        component: \"div\",\n        children: confirmDialog.subTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: classes.dialogActions,\n      children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n        onClick: () => setConfirmDialog({ ...confirmDialog,\n          isOpen: false\n        }),\n        text: \"No\",\n        color: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n        onClick: confirmDialog.onConfirm,\n        text: \"Yes\",\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ConfirmDialog;\nexport default ConfirmDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmDialog\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/ConfirmDialog.js"],"names":["Dialog","DialogTitle","DialogActions","DialogContent","Typography","makeStyles","IconButton","Controls","React","NotListedLocation","useStyles","theme","dialog","position","top","spacing","padding","dialogContent","textAlign","dialogTitle","dialogActions","justifyContent","titleIcon","backgroundColor","palette","secondary","light","color","main","marginLeft","cursor","fontSize","ConfirmDialog","props","classes","confirmDialog","setConfirmDialog","isOpen","paper","title","subTitle","onConfirm"],"mappings":"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","sourcesContent":["import {\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  Typography,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport Controls from '../../controls/Controls'\nimport React from 'react';\nimport { NotListedLocation } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    position: 'absolute',\n    top: theme.spacing(5),\n    padding: theme.spacing(2),\n  },\n  dialogContent: {\n    textAlign: 'center',\n  },\n  dialogTitle: {\n    textAlign: 'center',\n    \n  },\n  dialogActions: {\n    justifyContent: 'center',\n  },\n  titleIcon: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.main,\n    marginLeft:'30px',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n      cursor: 'default',\n    },\n    '& .MuiSvgIcon-root': {\n      fontSize: '8rem',\n      \n    },\n  },\n}));\n\nconst ConfirmDialog = (props) => {\n  const classes = useStyles();\n  const { confirmDialog, setConfirmDialog } = props;\n  return (\n    <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\n      <DialogTitle className={classes.dialogTitle}>\n        <IconButton disableRipple className={classes.titleIcon}>\n          <NotListedLocation />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent className={classes.dialogContent}>\n        <Typography variant='h6' component='div'>\n          {confirmDialog.title}\n        </Typography>\n        <Typography variant='subtitle2' component='div'>\n          {confirmDialog.subTitle}\n        </Typography>\n      </DialogContent>\n\n      <DialogActions className={classes.dialogActions}>\n        <Controls.Button\n          onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\n          text='No'\n          color='default'\n        />\n        <Controls.Button\n          onClick={confirmDialog.onConfirm}\n          text='Yes'\n          color='secondary'\n        />\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDialog;\n"]},"metadata":{},"sourceType":"module"}