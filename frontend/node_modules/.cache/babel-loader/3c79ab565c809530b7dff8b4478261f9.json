{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './PostScreen.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { CandidateCreate, getCandidateDetails } from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants'; // import {Link} from 'react-router-dom'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const postId = match.params.id;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    candidate\n  } = candidateDetails;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const candidate =post.candidates\n\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/admin/candidatelist/${candidate.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n      dispatch(getCandidateDetails(candidate.id));\n    }\n  }, [dispatch, postId, history, successCreated, userInfo, candidate]);\n\n  const createCandidateHandler = () => {\n    dispatch(CandidateCreate(post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-post-details\",\n    children: [loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), errors && /*#__PURE__*/_jsxDEV(Card, {\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.post_image,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createCandidateHandler,\n        className: \"apply\",\n        children: \"APPLY FOR THIS POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.applications === 10 ? 'red' : '#674305'\n          },\n          children: post.applications === 10 ? 'Closed' : 'Open'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Application: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), ' ', post.applications]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), ' ', post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), errorCreated && /*#__PURE__*/_jsxDEV(Card, {\n        children: errorCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this), loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-candidate\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostScreen, \"mV2oaZ4uklJyN0U+dveygonn0l0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostScreen;\nexport default PostScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostScreen.js"],"names":["React","useEffect","useSelector","useDispatch","listPostDetails","LoadingSpinner","Card","CandidateCreate","getCandidateDetails","APPLY_CREATE_RESET","PostScreen","match","history","dispatch","postId","params","id","createApplication","state","success","successCreated","loading","loadingCreated","error","errorCreated","candidateDetails","candidate","postDetails","post","errors","userLogin","userInfo","type","push","createCandidateHandler","post_image","title","color","applications","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport './PostScreen.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport {\n  CandidateCreate,\n  getCandidateDetails,\n} from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\n// import {Link} from 'react-router-dom'\nfunction PostScreen({ match, history }) {\n  const dispatch = useDispatch();\n\n  const postId = match.params.id;\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n  const candidateDetails = useSelector((state) => state.candidateDetails);\n  const { candidate } = candidateDetails;\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // const candidate =post.candidates\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/admin/candidatelist/${candidate.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n      dispatch(getCandidateDetails(candidate.id));\n    }\n  }, [dispatch, postId, history, successCreated, userInfo, candidate]);\n\n  const createCandidateHandler = () => {\n    dispatch(CandidateCreate(post.id));\n  };\n\n  return (\n    <div className='main-post-details'>\n      {loadingCreated && <LoadingSpinner asOverlay />}\n      {loading && <LoadingSpinner asOverlay />}\n      {errors && <Card>{errors}</Card>}\n      <div className='section-image'>\n        <img src={post.post_image} alt={post.title} />\n        <button onClick={createCandidateHandler} className='apply'>\n          APPLY FOR THIS POST\n        </button>\n      </div>\n\n      <div className='section-description'>\n        <h1>\n          <span style={{ color: 'green' }}>Title: </span>\n          {post.title}\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Post:</span>\n          {\n            <span\n              style={{ color: post.applications === 10 ? 'red' : '#674305' }}>\n              {post.applications === 10 ? 'Closed' : 'Open'}\n            </span>\n          }\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Application: </span>{' '}\n          {post.applications}\n        </h1>\n        <p>\n          <span style={{ color: 'green' }}>Description:</span>{' '}\n          {post.description}\n        </p>\n        {errorCreated && <Card>{errorCreated}</Card>}\n        {loadingCreated && <LoadingSpinner asOverlay />}\n      </div>\n      <div className='section-candidate'>\n        <Card>\n          <p>{post.title}</p>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default PostScreen;\n"]},"metadata":{},"sourceType":"module"}