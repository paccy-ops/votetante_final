{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VotingScreenPage = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n  const postId = match.params.id;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      marginTop: '200px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your Voting for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: '20px',\n          color: 'seagreen'\n        },\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"Post\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-candidate\",\n      children: data.map(postCandidate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: postCandidate.isPass && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/post\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: postCandidate.candidate_image,\n                    alt: postCandidate.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: '20px',\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'green'\n                      },\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 27\n                    }, this), postCandidate.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"spn\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"Applied For: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"sp\", {\n                      children: postCandidate.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"E-mail:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 27\n                    }, this), ' ', postCandidate.candidate_email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"View Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VotingScreenPage, \"7H2q+bTuNBG0vavnV20FQR7+v1U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = VotingScreenPage;\nexport default _c2 = withRouter(VotingScreenPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VotingScreenPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/VotingScreenPage.js"],"names":["React","useEffect","useState","Link","withRouter","useSelector","useDispatch","listPostDetails","LoadingSpinner","Card","APPLY_CREATE_RESET","VotingScreenPage","match","history","dispatch","data","setData","loadingData","setLoadingData","postId","params","id","postDetails","state","post","loading","errors","userLogin","userInfo","createApplication","success","successCreated","loadingCreated","error","errorCreated","type","push","candidates","marginTop","margin","color","title","map","postCandidate","isPass","candidate_image","name","marginLeft","fontSize","candidate_email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\n\nconst VotingScreenPage = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n\n  const postId = match.params.id;\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]);\n  return (\n    <form style={{ marginTop: '200px' }}>\n      <h1>\n        Your Voting for{' '}\n        <span style={{ margin: '20px', color: 'seagreen' }}>{post.title}</span>\n        Post\n      </h1>\n      <div className='section-candidate'>\n        {data.map((postCandidate) => {\n          return (\n            <div>\n              {postCandidate.isPass && (\n                <div className='posts'>\n                  <Link to='/post'>\n                    <div className='description'>\n                      <div>\n                        <img\n                          src={postCandidate.candidate_image}\n                          alt={postCandidate.name}\n                        />\n                        <span style={{ marginLeft: '20px', fontSize: '12px' }}>\n                          <span style={{ color: 'green' }}>Name:</span>\n                          {postCandidate.name}\n                        </span>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <spn style={{ color: '#000' }}>Applied For: </spn>\n                          <sp>{postCandidate.title}</sp>\n                        </h4>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <span style={{ color: '#000' }}>E-mail:</span>{' '}\n                          {postCandidate.candidate_email}\n                        </h4>\n\n                        <button>View Profile</button>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nexport default withRouter(VotingScreenPage);\n"]},"metadata":{},"sourceType":"module"}