{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{withRouter}from'react-router-dom';import{getUserDetails}from'../Action/UserActions';import LoadingSpinner from'../shared/components/UIElements/LoadingSpinner';import Card from'../shared/components/UIElements/Card';import profile from'../images/user.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserProfileScreen(_ref){var match=_ref.match,location=_ref.location;var profileId=match.params.id;var redirect=location.search;var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;useEffect(function(){if(!user.name||user.id!==Number(profileId)){dispatch(getUserDetails(profileId));}},[dispatch,user,profileId,redirect]);return/*#__PURE__*/_jsxs(\"div\",{className:\"main-post-details_profile\",children:[loading&&/*#__PURE__*/_jsx(LoadingSpinner,{asOverlay:true}),error&&/*#__PURE__*/_jsx(Card,{children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"section-image_profile\",children:/*#__PURE__*/_jsx(\"img\",{src:profile,alt:user.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-description_profile\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Name: \"}),user.name]}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Address: \"}),user.location]}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Role: \"}),user.isAdmin?'Admin':user.isCandidate?'Candidate':'User']}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Email: \"}),user.email]}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Applied For: \"}),user.applyingFor]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"Bio:\"}),user.bio]})]})]});}export default withRouter(UserProfileScreen);","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/screen/UserProfileScreen.js"],"names":["React","useEffect","useSelector","useDispatch","withRouter","getUserDetails","LoadingSpinner","Card","profile","UserProfileScreen","match","location","profileId","params","id","redirect","search","dispatch","userDetails","state","loading","error","user","name","Number","color","isAdmin","isCandidate","email","applyingFor","bio"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,gDAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,sCAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,wFAEA,QAASC,CAAAA,iBAAT,MAAgD,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,QAAY,MAAZA,QAAY,CAC9C,GAAMC,CAAAA,SAAS,CAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAGJ,QAAQ,CAACK,MAA1B,CACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,WAAW,CAAGhB,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAA/B,CAL8C,GAMtCE,CAAAA,OANsC,CAMbF,WANa,CAMtCE,OANsC,CAM7BC,KAN6B,CAMbH,WANa,CAM7BG,KAN6B,CAMtBC,IANsB,CAMbJ,WANa,CAMtBI,IANsB,CAQ9CrB,SAAS,CAAC,UAAM,CACd,GAAI,CAACqB,IAAI,CAACC,IAAN,EAAcD,IAAI,CAACR,EAAL,GAAYU,MAAM,CAACZ,SAAD,CAApC,CAAiD,CAC/CK,QAAQ,CAACZ,cAAc,CAACO,SAAD,CAAf,CAAR,CACD,CACF,CAJQ,CAIN,CAACK,QAAD,CAAWK,IAAX,CAAiBV,SAAjB,CAA4BG,QAA5B,CAJM,CAAT,CAMA,mBACE,aAAK,SAAS,CAAC,2BAAf,WACGK,OAAO,eAAI,KAAC,cAAD,EAAgB,SAAS,KAAzB,EADd,CAEGC,KAAK,eAAI,KAAC,IAAD,WAAOA,KAAP,EAFZ,cAGE,YAAK,SAAS,CAAC,uBAAf,uBACE,YAAK,GAAG,CAAEb,OAAV,CAAmB,GAAG,CAAEc,IAAI,CAACC,IAA7B,EADF,EAHF,cAME,aAAK,SAAS,CAAC,6BAAf,wBACE,mCACE,aAAM,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAT,CAAb,oBADF,CAEGH,IAAI,CAACC,IAFR,GADF,cAKE,mCACE,aAAM,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAT,CAAb,uBADF,CAEGH,IAAI,CAACX,QAFR,GALF,cAUE,mCACE,aAAM,KAAK,CAAE,CAAEc,KAAK,CAAE,OAAT,CAAb,oBADF,CAEGH,IAAI,CAACI,OAAL,CAAe,OAAf,CAAyBJ,IAAI,CAACK,WAAL,CAAmB,WAAnB,CAAiC,MAF7D,GAVF,cAcE,mCACE,aAAM,KAAK,CAAE,CAAEF,KAAK,CAAE,OAAT,CAAb,qBADF,CAEGH,IAAI,CAACM,KAFR,GAdF,cAmBE,mCACE,aAAM,KAAK,CAAE,CAAEH,KAAK,CAAE,OAAT,CAAb,2BADF,CAEGH,IAAI,CAACO,WAFR,GAnBF,cAwBE,kCACE,aAAM,KAAK,CAAE,CAAEJ,KAAK,CAAE,OAAT,CAAb,kBADF,CAEGH,IAAI,CAACQ,GAFR,GAxBF,GANF,GADF,CAsCD,CAED,cAAe1B,CAAAA,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserDetails } from '../Action/UserActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport profile from '../images/user.png';\n\nfunction UserProfileScreen({ match, location }) {\n  const profileId = match.params.id;\n  const redirect = location.search;\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  useEffect(() => {\n    if (!user.name || user.id !== Number(profileId)) {\n      dispatch(getUserDetails(profileId));\n    }\n  }, [dispatch, user, profileId, redirect]);\n\n  return (\n    <div className='main-post-details_profile'>\n      {loading && <LoadingSpinner asOverlay />}\n      {error && <Card>{error}</Card>}\n      <div className='section-image_profile'>\n        <img src={profile} alt={user.name} />\n      </div>\n      <div className='section-description_profile'>\n        <h2>\n          <span style={{ color: 'green' }}>Name: </span>\n          {user.name}\n        </h2>\n        <h2>\n          <span style={{ color: 'green' }}>Address: </span>\n          {user.location}\n        </h2>\n\n        <h2>\n          <span style={{ color: 'green' }}>Role: </span>\n          {user.isAdmin ? 'Admin' : user.isCandidate ? 'Candidate' : 'User'}\n        </h2>\n        <h2>\n          <span style={{ color: 'green' }}>Email: </span>\n          {user.email}\n        </h2>\n\n        <h2>\n          <span style={{ color: 'green' }}>Applied For: </span>\n          {user.applyingFor}\n        </h2>\n\n        <p>\n          <span style={{ color: 'green' }}>Bio:</span>\n          {user.bio}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}