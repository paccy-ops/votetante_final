{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { postCreateReducers, postDeleteReducers, postDetailReducers, postListReducers } from './reducers/PostReducers';\nimport { userUpdateProfileReducer, userDeleteReducer, userDetailsReducers, userListReducer, userLoginReducers, userRegisterReducers, userUpdateReducer } from './reducers/UserReducer';\nimport { listCandidatesReducer } from './reducers/CandidateReducers';\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete: postDeleteReducers,\n  postCreate: postCreateReducers,\n  postDetails: postDetailReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList: listCandidatesReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","postCreateReducers","postDeleteReducers","postDetailReducers","postListReducers","userUpdateProfileReducer","userDeleteReducer","userDetailsReducers","userListReducer","userLoginReducers","userRegisterReducers","userUpdateReducer","listCandidatesReducer","reducer","postList","postDelete","postCreate","postDetails","userLogin","userRegister","userList","userDetails","userDelete","userUpdateProfile","userUpdate","candidatesList","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,EAAqEC,gBAArE,QAA6F,yBAA7F;AACA,SACEC,wBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,oBANF,EAOEC,iBAPF,QAQO,wBARP;AASA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC9BiB,EAAAA,QAAQ,EAAEV,gBADoB;AAE9BW,EAAAA,UAAU,EAACb,kBAFmB;AAG9Bc,EAAAA,UAAU,EAACf,kBAHmB;AAI9BgB,EAAAA,WAAW,EAAEd,kBAJiB;AAK9Be,EAAAA,SAAS,EAAET,iBALmB;AAM9BU,EAAAA,YAAY,EAAET,oBANgB;AAO9BU,EAAAA,QAAQ,EAAEZ,eAPoB;AAQ9Ba,EAAAA,WAAW,EAAEd,mBARiB;AAS9Be,EAAAA,UAAU,EAAEhB,iBATkB;AAU9BiB,EAAAA,iBAAiB,EAAElB,wBAVW;AAW9BmB,EAAAA,UAAU,EAAEb,iBAXkB;AAY9Bc,EAAAA,cAAc,EAACb;AAZe,CAAD,CAA/B;AAeA,MAAMc,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEb,EAAAA,SAAS,EAAE;AAAEc,IAAAA,QAAQ,EAAEN;AAAZ;AAAb,CAArB;AACA,MAAMO,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CACvBiB,OADuB,EAEvBkB,YAFuB,EAGvB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { postCreateReducers, postDeleteReducers, postDetailReducers, postListReducers } from './reducers/PostReducers';\nimport {\n  userUpdateProfileReducer,\n  userDeleteReducer,\n  userDetailsReducers,\n  userListReducer,\n  userLoginReducers,\n  userRegisterReducers,\n  userUpdateReducer,\n} from './reducers/UserReducer';\nimport { listCandidatesReducer } from './reducers/CandidateReducers';\n\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete:postDeleteReducers,\n  postCreate:postCreateReducers,\n  postDetails: postDetailReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList:listCandidatesReducer\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}