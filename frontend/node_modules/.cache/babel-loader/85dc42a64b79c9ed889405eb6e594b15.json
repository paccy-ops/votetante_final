{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../shared/components/FormElements/Input';\nimport Button from '../shared/components/FormElements/Button';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../shared/util/validators';\nimport { useForm } from '../shared/hooks/form-hook';\nimport { getUserDetails } from '../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen({\n  location,\n  history\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const useDetails = useSelector(state => state.useDetails);\n  const {\n    error,\n    user,\n    loading\n  } = useDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: user.email,\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    },\n    passwordConfirm: {\n      value: '',\n      isValid: false\n    },\n    name: {\n      value: user.name,\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!userInfo || !user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {}\n    }\n  }, [history, userInfo, user, dispatch]);\n\n  const registerSubmitHandler = e => {\n    e.preventDefault();\n\n    if (formState.inputs.password.value !== formState.inputs.passwordConfirm.value) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(getUserDetails()); //\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: registerSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"UserProfile \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            placeholder: \"Enter Name\",\n            validators: [VALIDATOR_REQUIRE()],\n            errorText: \"Name Required\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"email\",\n            type: \"email\",\n            label: \"E-Mail\",\n            placeholder: \"Enter E-Mail\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Please enter a valid email address.\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Enter Password\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Please enter a valid password, at least 6 characters.\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"passwordConfirm\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            placeholder: \"Enter Password again\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Password don't match\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !formState.isValid,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"t1sPdA3AgR3/JyMCiCQERU5nm8E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ProfileScreen.js"],"names":["React","useEffect","useState","Input","Button","Link","useSelector","useDispatch","Card","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","getUserDetails","ProfileScreen","location","history","message","setMessage","dispatch","useDetails","state","error","user","loading","userLogin","userInfo","formState","inputHandler","email","value","isValid","password","passwordConfirm","name","push","registerSubmitHandler","e","preventDefault","inputs"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Input from '../shared/components/FormElements/Input';\nimport Button from '../shared/components/FormElements/Button';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../shared/util/validators';\nimport { useForm } from '../shared/hooks/form-hook';\nimport { getUserDetails } from '../Action/UserActions';\n\nfunction ProfileScreen({ location, history }) {\n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch();\n  const useDetails = useSelector((state) => state.useDetails);\n  const { error, user, loading } = useDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const [formState, inputHandler] = useForm(\n    {\n      email: {\n        value: user.email,\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n      passwordConfirm: {\n        value: '',\n        isValid: false,\n      },\n      name: {\n        value: user.name,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!userInfo || !user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n      }\n    }\n  }, [history, userInfo, user, dispatch]);\n\n  const registerSubmitHandler = (e) => {\n    e.preventDefault();\n    if (\n      formState.inputs.password.value !== formState.inputs.passwordConfirm.value\n    ) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(getUserDetails());\n      //\n    }\n  };\n  return (\n    <form onSubmit={registerSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n          <div className='form-all'>\n            <h2>UserProfile </h2>\n            {message && <Card className='error_message'>{message}</Card>}\n            {error && <Card className='error_message'>{error}</Card>}\n            {loading && <LoadingSpinner asOverlay />}\n            <Input\n              element='input'\n              id='name'\n              type='text'\n              label='Name'\n              placeholder='Enter Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Name Required'\n              onInput={inputHandler}\n            />\n            <Input\n              element='input'\n              id='email'\n              type='email'\n              label='E-Mail'\n              placeholder='Enter E-Mail'\n              validators={[VALIDATOR_EMAIL()]}\n              errorText='Please enter a valid email address.'\n              onInput={inputHandler}\n            />\n            <Input\n              element='input'\n              id='password'\n              type='password'\n              label='Password'\n              placeholder='Enter Password'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText='Please enter a valid password, at least 6 characters.'\n              onInput={inputHandler}\n            />\n            <Input\n              element='input'\n              id='passwordConfirm'\n              type='password'\n              label='Confirm Password'\n              placeholder='Enter Password again'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText=\"Password don't match\"\n              onInput={inputHandler}\n            />\n            <Button type='submit' disabled={!formState.isValid}>\n              Update\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}