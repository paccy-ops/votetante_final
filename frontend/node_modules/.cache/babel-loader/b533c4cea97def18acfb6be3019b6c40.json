{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { POST_UPDATE_RESET } from '../constants/PostConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApplyScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const postId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [isApplying, setIsApplying] = useState(false);\n  const dispatch = useDispatch();\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    loading,\n    error,\n    post\n  } = postDetails;\n  const postUpdate = useSelector(state => state.postUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = postUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: POST_UPDATE_RESET\n      });\n      history.push('/admin/posts');\n    } else {\n      if (!post.title || post.id !== Number(postId)) {\n        dispatch(listPostDetails(postId));\n      } else {\n        setTitle(post.title);\n        setDescription(post.description);\n        setIsActive(post.isActive);\n        setIsApplying(post.isApplying);\n      }\n    }\n  }, [dispatch, history, successUpdate, post, postId]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(PostUpdate({\n      id: postId,\n      title,\n      description,\n      isActive,\n      isApplying\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/posts/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '200px',\n          outline: 'none'\n        },\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: [errorUpdate && /*#__PURE__*/_jsxDEV(Card, {\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"EDIT POST  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"description\",\n                placeholder: \"Write a Description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isActive,\n                  onChange: e => setIsActive(e.target.checked),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefault\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"flexSwitchCheckDefault\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isApplying,\n                  onChange: e => setIsApplying(e.target.checked),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefaults\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"flexSwitchCheckDefaults\",\n                  children: \"Users Application \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SAVE UPDATES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplyScreen, \"xnPQIc1NSm2sNmjXoKXjI8K54F0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ApplyScreen;\nexport default ApplyScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","Card","LoadingSpinner","Notification","listPostDetails","PostUpdate","POST_UPDATE_RESET","ApplyScreen","match","history","notify","setNotify","isOpen","message","type","postId","params","id","title","setTitle","description","setDescription","isActive","setIsActive","isApplying","setIsApplying","dispatch","postDetails","state","loading","error","post","postUpdate","success","successUpdate","errorUpdate","loadingUpdate","push","Number","updateSubmitHandler","e","preventDefault","position","left","outline","target","value","checked"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css'\nimport Notification from '../shared/components/UIElements/Notification'\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { POST_UPDATE_RESET } from '../constants/PostConstants';\n\nfunction ApplyScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n const postId = match.params.id\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [isApplying, setIsApplying] = useState(false);\n  \n\n  const dispatch = useDispatch()\n\n  const postDetails = useSelector(state => state.postDetails)\n  const {loading,error,post} = postDetails\n\n\n  const postUpdate = useSelector(state => state.postUpdate)\n  const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({type:POST_UPDATE_RESET})\n      history.push('/admin/posts')\n    \n    }else{\n      if(!post.title || post.id !== Number(postId)){\n        dispatch(listPostDetails(postId))\n        }else{\n          setTitle(post.title)\n          setDescription(post.description)\n          setIsActive(post.isActive)\n          setIsApplying(post.isApplying)\n         \n        }\n    }\n      \n  }, [dispatch,history,successUpdate,post,postId])\n  \n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n   dispatch(PostUpdate({\n     id:postId, title,description,isActive,isApplying\n   }))\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n    \n  };\n  return (\n    \n    <div>\n    <Link to=\"/admin/posts/\">\n    <button  style={{position:'absolute',left:'200px' ,outline:'none'}} type=\"button\" className=\"btn btn-outline-secondary\">GO BACK</button>\n    </Link>\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n        {errorUpdate&&<Card>{errorUpdate}</Card>}\n        {loadingUpdate&&<LoadingSpinner asOverlay/>}\n        {loading? <LoadingSpinner/>:error?<Card>{error}</Card>:\n        <div className='form-all'>\n        <h2>EDIT POST  </h2>\n    \n        <div className=\"form-control\">\n      <label htmlFor=\"title\">Post Title</label>\n      <input \n      type=\"text\" \n      id=\"title\" \n      placeholder=\"Enter Post Title\" \n      value={title}\n      onChange={(e) => setTitle(e.target.value)} />\n    \n    </div>\n    <div className=\"form-control\">\n      <label htmlFor=\"description\">Description</label>\n      <textarea type=\"text\" \n      id=\"description\" \n      placeholder=\"Write a Description\"  \n      value={description}\n      onChange={(e) => setDescription(e.target.value)}/>\n    </div>\n    <div className=\"form-control\">\n    <div className=\"form-check form-switch\">\n      <input checked={isActive} onChange={(e) => setIsActive(e.target.checked)} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Active</label>\n    </div>\n    \n  </div>\n    <div className=\"form-control\">\n    <div className=\"form-check form-switch\">\n    <input checked={isApplying}  onChange={(e) => setIsApplying(e.target.checked)} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefaults\"/>\n    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefaults\">Users Application </label>\n\n    </div>\n    </div>\n        \n        <Button type='submit'>\n          SAVE UPDATES\n        </Button>\n\n        \n          \n  \n</div>\n      }\n         \n        </div>\n      </div>\n    </form>\n    <Notification notify={notify} setNotify={setNotify} />\n\n    </div>\n    \n  );\n}\n\n\n\nexport default ApplyScreen;\n\n\n\n"]},"metadata":{},"sourceType":"module"}