{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { getCandidateDetails } from '../Action/CandidateActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApplyScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const candidateId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [name, setname] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [applyReason, setapplyReason] = useState('');\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails; // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n    // }else{\n    if (!candidate.name || candidate.post !== Number(candidateId)) {\n      dispatch({\n        type: APPLY_CREATE_RESET\n      });\n      dispatch(getCandidateDetails(candidateId));\n    } else {\n      setTitle(candidate.title);\n      setDescription(candidate.bio);\n    }\n  }, [dispatch, candidate, candidateId]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(PostUpdate({//  id:postId, title,description,isActive,isApplying\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/posts/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '200px',\n          outline: 'none'\n        },\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"EDIT POST  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"description\",\n                placeholder: \"Write a Description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SAVE UPDATES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplyScreen, \"IHL0MPgV1s2pabnPODGpXjHbLMQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ApplyScreen;\nexport default ApplyScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/ApplyScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","Card","LoadingSpinner","Notification","listPostDetails","PostUpdate","APPLY_CREATE_RESET","getCandidateDetails","ApplyScreen","match","history","notify","setNotify","isOpen","message","type","candidateId","params","id","title","setTitle","name","setname","email","setEmail","address","setAddress","applyReason","setapplyReason","description","setDescription","dispatch","candidateDetails","state","loading","error","candidate","post","Number","bio","updateSubmitHandler","e","preventDefault","position","left","outline","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css'\nimport Notification from '../shared/components/UIElements/Notification'\nimport { listPostDetails, PostUpdate } from '../Action/PostActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { getCandidateDetails } from '../Action/CandidateActions';\n\nfunction ApplyScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n const candidateId = match.params.id\n  const [title, setTitle] = useState('');\n  const [name, setname] = useState('');\n  const [email, setEmail] = useState('');\n  const [address,setAddress] = useState('');\n  const [applyReason,setapplyReason] = useState('');\n  const [description, setDescription] = useState('');\n  \n  \n\n  const dispatch = useDispatch()\n\n  const candidateDetails = useSelector(state => state.candidateDetails)\n  const {loading,error,candidate} = candidateDetails\n\n\n  // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n    \n    // }else{\n      if(!candidate.name || candidate.post !== Number(candidateId)){\n        dispatch({type:APPLY_CREATE_RESET})\n        dispatch(getCandidateDetails(candidateId))\n        }else{\n          setTitle(candidate.title)\n          setDescription(candidate.bio) \n        }\n    \n      \n  }, [dispatch,candidate,candidateId])\n  \n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n   dispatch(PostUpdate({\n    //  id:postId, title,description,isActive,isApplying\n   }))\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n    \n  };\n  return (\n    \n    <div>\n    <Link to=\"/admin/posts/\">\n    <button  style={{position:'absolute',left:'200px' ,outline:'none'}} type=\"button\" className=\"btn btn-outline-secondary\">GO BACK</button>\n    </Link>\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n        \n        {loading? <LoadingSpinner/>:error?<Card>{error}</Card>:\n        <div className='form-all'>\n        <h2>EDIT POST  </h2>\n    \n        <div className=\"form-control\">\n      <label htmlFor=\"title\">Post Title</label>\n      <input \n      type=\"text\" \n      id=\"title\" \n      placeholder=\"Enter Post Title\" \n      value={title}\n      onChange={(e) => setTitle(e.target.value)} />\n    \n    </div>\n    <div className=\"form-control\">\n      <label htmlFor=\"description\">Description</label>\n      <textarea type=\"text\" \n      id=\"description\" \n      placeholder=\"Write a Description\"  \n      value={description}\n      onChange={(e) => setDescription(e.target.value)}/>\n    </div>\n    \n    \n        \n        <Button type='submit'>\n          SAVE UPDATES\n        </Button>\n\n        \n          \n  \n</div>\n      }\n         \n        </div>\n      </div>\n    </form>\n    <Notification notify={notify} setNotify={setNotify} />\n\n    </div>\n    \n  );\n}\n\n\n\nexport default ApplyScreen;\n\n\n\n"]},"metadata":{},"sourceType":"module"}