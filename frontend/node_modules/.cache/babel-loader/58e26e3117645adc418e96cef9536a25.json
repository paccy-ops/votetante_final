{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/offiaclreact/src/screen/PostScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './PostScreen.css';\nimport image from '../images/gunnar.jpg';\nimport user from '../images/user.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { CandidateCreate } from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n  const postId = match.params.id;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const candidate =post.candidates\n\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      if (errorCreated) {\n        setMessage(errorCreated);\n      }\n\n      if (successCreated) {\n        setMessage('Candidate added');\n      }\n\n      dispatch(listPostDetails(postId));\n\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [dispatch, postId, message, errorCreated, history, post, successCreated, userInfo]);\n\n  const createCandidateHandler = e => {\n    e.preventDefault();\n    dispatch(CandidateCreate(post.id));\n  };\n\n  if (loadingData) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-post-details\",\n    children: [loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), errors && /*#__PURE__*/_jsxDEV(Card, {\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), post.isApplying && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createCandidateHandler,\n        className: \"apply\",\n        children: \"APPLY FOR THIS POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.applications === 10 ? 'red' : '#674305'\n          },\n          children: post.applications === 10 ? 'Closed' : 'Open'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Application: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), ' ', post.applications]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), ' ', post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), errorCreated && /*#__PURE__*/_jsxDEV(Card, {\n        children: errorCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 26\n      }, this), loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-application-bar\",\n      style: {\n        position: 'absolute',\n        top: '570px',\n        left: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"active_application\",\n        children: [\"Active Application for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'seagreen',\n            fontWeight: '900'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-candidate\",\n      children: data.map(postCandidate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: postCandidate.isPass && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/post\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user,\n                    alt: postCandidate.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: '20px',\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'green'\n                      },\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 27\n                    }, this), postCandidate.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"Applied For: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: postCandidate.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#000'\n                      },\n                      children: \"E-mail:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this), ' ', postCandidate.candidate_email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontSize: '15px',\n                      width: '90%',\n                      marginLeft: '10px',\n                      fontFamily: 'sans-serif'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        marginRight: '10px',\n                        color: 'seagreen'\n                      },\n                      children: \"Bio:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, this), postCandidate.bio.slice(1, 100)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/profile/candidates/${postCandidate.id}`,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      children: \"View Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)\n        }, postCandidate.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostScreen, \"GQ1zAgiwlzAdpyf3ye3fUmg4ZO0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostScreen;\nexport default _c2 = withRouter(PostScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/screen/PostScreen.js"],"names":["React","useEffect","useState","image","user","useSelector","useDispatch","listPostDetails","LoadingSpinner","Card","CandidateCreate","APPLY_CREATE_RESET","withRouter","Link","PostScreen","match","history","dispatch","data","setData","message","setMessage","loadingData","setLoadingData","postId","params","id","createApplication","state","success","successCreated","loading","loadingCreated","error","errorCreated","postDetails","post","errors","userLogin","userInfo","type","push","candidates","createCandidateHandler","e","preventDefault","title","isApplying","color","applications","description","position","top","left","fontWeight","map","postCandidate","isPass","name","marginLeft","fontSize","candidate_email","width","fontFamily","marginRight","bio","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './PostScreen.css';\nimport image from '../images/gunnar.jpg';\nimport user from '../images/user.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { CandidateCreate } from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nfunction PostScreen({ match, history }) {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [loadingData, setLoadingData] = useState(false);\n\n  const postId = match.params.id;\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // const candidate =post.candidates\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      if (errorCreated) {\n        setMessage(errorCreated);\n      }\n      if (successCreated) {\n        setMessage('Candidate added');\n      }\n      dispatch(listPostDetails(postId));\n      if (post.candidates) {\n        setLoadingData(false);\n        setData(post.candidates);\n      } else {\n        setData([]);\n        setLoadingData(true);\n      }\n    }\n  }, [\n    dispatch,\n    postId,\n    message,\n    errorCreated,\n    history,\n    post,\n    successCreated,\n    userInfo,\n  ]);\n\n  const createCandidateHandler = (e) => {\n    e.preventDefault();\n    dispatch(CandidateCreate(post.id));\n  };\n\n  if (loadingData) {\n    return <LoadingSpinner asOverlay />;\n  }\n\n  return (\n    <div className='main-post-details'>\n      {loadingCreated && <LoadingSpinner asOverlay />}\n      {loading && <LoadingSpinner asOverlay />}\n      {errors && <Card>{errors}</Card>}\n      <div className='section-image'>\n        <img src={image} alt={post.title} />\n        {post.isApplying && (\n          <button\n            type='button'\n            onClick={createCandidateHandler}\n            className='apply'>\n            APPLY FOR THIS POST\n          </button>\n        )}\n      </div>\n\n      <div className='section-description'>\n        <h1>\n          <span style={{ color: 'green' }}>Title: </span>\n          {post.title}\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Post:</span>\n          {\n            <span\n              style={{ color: post.applications === 10 ? 'red' : '#674305' }}>\n              {post.applications === 10 ? 'Closed' : 'Open'}\n            </span>\n          }\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Application: </span>{' '}\n          {post.applications}\n        </h1>\n        <p>\n          <span style={{ color: 'green' }}>Description:</span>{' '}\n          {post.description}\n        </p>\n        {message && <Card>{message}</Card>}\n        {errorCreated && <Card>{errorCreated}</Card>}\n        {loadingCreated && <LoadingSpinner asOverlay />}\n      </div>\n      <div\n        className='active-application-bar'\n        style={{\n          position: 'absolute',\n          top: '570px',\n          left: '200px',\n        }}>\n        <h1 className='active_application'>\n          Active Application for{' '}\n          <span\n            style={{\n              color: 'seagreen',\n              fontWeight: '900',\n            }}>\n            {post.title}\n          </span>\n        </h1>\n      </div>\n      <div className='section-candidate'>\n        {data.map((postCandidate) => {\n          return (\n            <div key={postCandidate.id}>\n              {postCandidate.isPass && (\n                <div className='posts'>\n                  <Link to='/post'>\n                    <div className='description'>\n                      <div>\n                        <img src={user} alt={postCandidate.name} />\n                        <span style={{ marginLeft: '20px', fontSize: '12px' }}>\n                          <span style={{ color: 'green' }}>Name:</span>\n                          {postCandidate.name}\n                        </span>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <span style={{ color: '#000' }}>Applied For: </span>\n                          <span>{postCandidate.title}</span>\n                        </h4>\n                        <h4 style={{ fontSize: '12px' }}>\n                          <span style={{ color: '#000' }}>E-mail:</span>{' '}\n                          {postCandidate.candidate_email}\n                        </h4>\n                        <p\n                          style={{\n                            fontSize: '15px',\n                            width: '90%',\n                            marginLeft: '10px',\n                            fontFamily: 'sans-serif',\n                          }}>\n                          <span\n                            style={{\n                              marginRight: '10px',\n                              color: 'seagreen',\n                            }}>\n                            Bio:\n                          </span>\n                          {postCandidate.bio.slice(1, 100)}\n                        </p>\n                        <Link to={`/profile/candidates/${postCandidate.id}`}>\n                          <button>View Profile</button>\n                        </Link>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(PostScreen);\n"]},"metadata":{},"sourceType":"module"}