{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/EmployeesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from '../../Components/Useform';\nimport Controls from '../../Components/controls/Controls';\nimport * as employeeServices from '../../services/EmployeesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenderItem = [{\n  id: 'male',\n  title: 'male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  isCandidate: false,\n  isAdmin: false\n};\n\nconst EmployeesForm = props => {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldsValues) temp.fullName = fieldsValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldsValues) temp.email = /$^|.+@.+..+/.test(fieldsValues.email) ? '' : 'Email is not field';\n    if ('mobile' in fieldsValues) temp.mobile = fieldsValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required';\n    if ('departmentId' in fieldsValues) temp.departmentId = fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n    setErrors({ ...temp\n    });\n    if (fieldsValues === values) return Object.values(temp).every(x => x === '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = Useform(initialValues, true, validate);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"fullName\",\n          label: \"Full name\",\n          value: values.fullName,\n          error: errors.fullName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          error: errors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"gender\",\n          label: \"Gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          items: GenderItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"departmentId\",\n          label: \"Department\",\n          value: values.departmentId,\n          onChange: handleInputChange,\n          options: employeeServices.getGetDepartmentCollection(),\n          error: errors.departmentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"hireDate\",\n          label: \"Hire Date\",\n          value: values.hireDate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.CheckBox, {\n          name: \"isPermanent\",\n          label: \"permanent Employee\",\n          value: values.isPermanent,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            onClick: resetForm,\n            color: \"default\",\n            text: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeesForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EmployeesForm;\nexport default EmployeesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesForm\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/TanteAdmin/Pages/Employees/EmployeesForm.js"],"names":["React","useEffect","Grid","Useform","Form","Controls","employeeServices","GenderItem","id","title","initialValues","name","email","mobile","city","gender","departmentId","isCandidate","isAdmin","EmployeesForm","props","addOrEdit","recordForEdit","validate","fieldsValues","values","temp","errors","fullName","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","event","preventDefault","getGetDepartmentCollection","hireDate","isPermanent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from '../../Components/Useform';\nimport Controls from '../../Components/controls/Controls';\nimport * as employeeServices from '../../services/EmployeesService';\n\nconst GenderItem = [\n  { id: 'male', title: 'male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\nconst initialValues = {\n  id: 0,\n  name: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  isCandidate: false,\n  isAdmin: false,\n};\n\nconst EmployeesForm = (props) => {\n  const { addOrEdit, recordForEdit } = props;\n  const validate = (fieldsValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldsValues)\n      temp.fullName = fieldsValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldsValues)\n      temp.email = /$^|.+@.+..+/.test(fieldsValues.email)\n        ? ''\n        : 'Email is not field';\n    if ('mobile' in fieldsValues)\n      temp.mobile =\n        fieldsValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required';\n    if ('departmentId' in fieldsValues)\n      temp.departmentId =\n        fieldsValues.departmentId.length !== 0 ? '' : 'This field is required';\n    setErrors({\n      ...temp,\n    });\n    if (fieldsValues === values)\n      return Object.values(temp).every((x) => x === '');\n  };\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  } = Useform(initialValues, true, validate);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues({\n        ...recordForEdit,\n      });\n    }\n  }, [recordForEdit, setValues]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='fullName'\n            label='Full name'\n            value={values.fullName}\n            error={errors.fullName}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            label='Email'\n            name='email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            label='Mobile'\n            name='mobile'\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.Input\n            label='City'\n            name='city'\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            name='gender'\n            label='Gender'\n            value={values.gender}\n            onChange={handleInputChange}\n            items={GenderItem}\n          />\n          <Controls.Select\n            name='departmentId'\n            label='Department'\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={employeeServices.getGetDepartmentCollection()}\n            error={errors.departmentId}\n          />\n          <Controls.DatePicker\n            name='hireDate'\n            label='Hire Date'\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.CheckBox\n            name='isPermanent'\n            label='permanent Employee'\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.Button type='submit' text='Submit' />\n            <Controls.Button onClick={resetForm} color='default' text='Reset' />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default EmployeesForm;\n"]},"metadata":{},"sourceType":"module"}