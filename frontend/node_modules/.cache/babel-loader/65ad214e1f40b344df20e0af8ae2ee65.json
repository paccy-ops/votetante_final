{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/apps/src/screen/CandidateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport Button from '../shared/components/FormElements/Button';\nimport './profileScreen.css';\nimport { getCandidateDetails } from '../Action/CandidateActions';\nimport { POST_CREATE_VOTE_RESET } from '../constants/PostConstants';\nimport { CreatePostVote } from '../Action/PostActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserProfileScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const profileId = match.params.id;\n  const dispatch = useDispatch();\n  const postId = match.params.id;\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails;\n  const votePost = useSelector(state => state.votePost);\n  const {\n    success: successCreatedVote,\n    loading: loadingCreatedVote,\n    error: errorCreatedVote,\n    cast: casted\n  } = votePost;\n  useEffect(() => {\n    if (!candidate.name || candidate.id !== Number(profileId) || successCreatedVote) {\n      dispatch(getCandidateDetails(profileId));\n      dispatch({\n        type: POST_CREATE_VOTE_RESET\n      });\n      history.push('/');\n    }\n  }, [dispatch, candidate, profileId, history, successCreatedVote]);\n\n  const votingSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(CreatePostVote(postId)); //\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-post-details_profile\",\n    children: [successCreatedVote && /*#__PURE__*/_jsxDEV(Card, {\n      children: casted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this), errorCreatedVote && /*#__PURE__*/_jsxDEV(Card, {\n      children: errorCreatedVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }, this), loadingCreatedVote && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-image_profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: candidate.candidate_image,\n        alt: candidate.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), candidate.isPass && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '20%',\n          position: 'absolute',\n          left: '10px',\n          bottom: '-30px'\n        },\n        onClick: votingSubmitHandler,\n        children: [\"Vote for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#fff'\n          },\n          children: candidate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-description_profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), candidate.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), candidate.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Role: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), candidate.isPass ? 'Candidate' : 'User']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), candidate.candidate_email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Applied For: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), candidate.applyingFor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Bio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), candidate.bio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfileScreen, \"liY+Ig0VmW1UmTZImiTI9U99Wqc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserProfileScreen;\nexport default _c2 = withRouter(UserProfileScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserProfileScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/apps/src/screen/CandidateProfile.js"],"names":["React","useEffect","useSelector","useDispatch","withRouter","LoadingSpinner","Card","Button","getCandidateDetails","POST_CREATE_VOTE_RESET","CreatePostVote","UserProfileScreen","match","history","profileId","params","id","dispatch","postId","candidateDetails","state","loading","error","candidate","votePost","success","successCreatedVote","loadingCreatedVote","errorCreatedVote","cast","casted","name","Number","type","push","votingSubmitHandler","e","preventDefault","candidate_image","isPass","width","position","left","bottom","color","address","candidate_email","applyingFor","bio"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport Button from '../shared/components/FormElements/Button';\nimport './profileScreen.css';\n\nimport { getCandidateDetails } from '../Action/CandidateActions';\nimport { POST_CREATE_VOTE_RESET } from '../constants/PostConstants';\nimport { CreatePostVote } from '../Action/PostActions';\nfunction UserProfileScreen({ match, history }) {\n  const profileId = match.params.id;\n  const dispatch = useDispatch();\n\n  const postId = match.params.id;\n\n  const candidateDetails = useSelector((state) => state.candidateDetails);\n  const { loading, error, candidate } = candidateDetails;\n\n  const votePost = useSelector((state) => state.votePost);\n  const {\n    success: successCreatedVote,\n    loading: loadingCreatedVote,\n    error: errorCreatedVote,\n    cast: casted,\n  } = votePost;\n\n  useEffect(() => {\n    if (\n      !candidate.name ||\n      candidate.id !== Number(profileId) ||\n      successCreatedVote\n    ) {\n      dispatch(getCandidateDetails(profileId));\n      dispatch({ type: POST_CREATE_VOTE_RESET });\n      history.push('/');\n    }\n  }, [dispatch, candidate, profileId, history, successCreatedVote]);\n\n  const votingSubmitHandler = (e) => {\n    e.preventDefault();\n    dispatch(CreatePostVote(postId));\n    //\n  };\n\n  return (\n    <div className='main-post-details_profile'>\n      {successCreatedVote && <Card>{casted}</Card>}\n      {errorCreatedVote && <Card>{errorCreatedVote}</Card>}\n      {loadingCreatedVote && <LoadingSpinner asOverlay />}\n      {loading && <LoadingSpinner asOverlay />}\n      {error && <Card>{error}</Card>}\n      <div className='section-image_profile'>\n        <img src={candidate.candidate_image} alt={candidate.name} />\n        {candidate.isPass && (\n          <button\n            style={{\n              width: '20%',\n              position: 'absolute',\n              left: '10px',\n              bottom: '-30px',\n            }}\n            onClick={votingSubmitHandler}>\n            Vote for: <span style={{ color: '#fff' }}>{candidate.name}</span>\n          </button>\n        )}\n      </div>\n      <div className='section-description_profile'>\n        <h2>\n          <span style={{ color: 'green' }}>Name: </span>\n          {candidate.name}\n        </h2>\n        <h2>\n          <span style={{ color: 'green' }}>Address: </span>\n          {candidate.address}\n        </h2>\n\n        <h2>\n          <span style={{ color: 'green' }}>Role: </span>\n          {candidate.isPass ? 'Candidate' : 'User'}\n        </h2>\n        <h2>\n          <span style={{ color: 'green' }}>Email: </span>\n          {candidate.candidate_email}\n        </h2>\n\n        <h2>\n          <span style={{ color: 'green' }}>Applied For: </span>\n          {candidate.applyingFor}\n        </h2>\n\n        <p>\n          <span style={{ color: 'green' }}>Bio:</span>\n          {candidate.bio}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}