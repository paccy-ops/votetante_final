{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport './UserListScreen.css';\nimport { listUsers } from '../Action/UserActions';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls';\nimport Notification from '../shared/components/UIElements/Notification';\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog';\nimport Popup from '../shared/components/UIElements/Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserListScreen() {\n  _s();\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n\n  const openInPopup = item => {\n    // setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    users,\n    loading,\n    error\n  } = userList;\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Candidate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isCandidate ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/admin/users/${user.id}`,\n              children: /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontsize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n              onClick: () => {\n                setConfirmDialog({\n                  isOpen: true,\n                  title: 'Are you sure to delete this record?',\n                  subTitle: \"You can't undo this operation!\",\n                  onConfirm: () => {\n                    onDelete(item.id);\n                  }\n                }); // onDelete(item.id);\n              },\n              color: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                fontsize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      title: \"Employee Form\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Okay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserListScreen, \"EC4ZQQGyA9qcrqs8+1EwZGeWK9M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/UserListScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","LoadingSpinner","Card","listUsers","EditOutlined","DeleteOutline","Controls","Notification","ConfirmDialog","Popup","UserListScreen","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","notify","setNotify","message","type","openInPopup","item","dispatch","userList","state","users","loading","error","map","user","name","email","location","isAdmin","isCandidate","id","onConfirm","onDelete"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner'\nimport Card  from '../shared/components/UIElements/Card'\nimport './UserListScreen.css'\nimport { listUsers } from '../Action/UserActions'\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls'\nimport Notification from '../shared/components/UIElements/Notification'\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog'\nimport Popup from '../shared/components/UIElements/Popup'\n\nfunction UserListScreen() {\n\n    const [openPopup, setOpenPopup] = useState(false);\n    const [confirmDialog, setConfirmDialog] = useState({\n            isOpen: false,\n            title: '',\n            subTitle: '',\n        });\n    const [notify, setNotify] = useState({\n            isOpen: false,\n            message: '',\n            type: '',\n        });\n    const openInPopup = (item) => {\n        // setRecordForEdit(item);\n        setOpenPopup(true);\n        };\n        \n        \n    const dispatch = useDispatch()\n    const userList = useSelector(state => state.userList)\n    const {users,loading,error} = userList\n\n\n\nuseEffect(() => {\n    dispatch(listUsers())\n}, [dispatch])\n    return (\n        <React.Fragment>\n        <div className=\"user__list\">\n        <h2>Users List</h2>\n\n        {loading ?<LoadingSpinner asOverlay/>:error?<Card>{error}</Card>:\n        <table>\n        <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Address</th>\n            <th>Role</th>\n            <th>Candidate</th>\n            <th>Actions</th>\n        </tr>\n        {users.map((user)=>(\n            <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            <td>{user.location}</td>\n            <td>{user.isAdmin?'Yes':'No'}</td>\n            <td>{user.isCandidate?'Yes':'No'}</td>\n            <td>\n            <Link to={`/admin/users/${user.id}`}>\n            <Controls.ActionButton color='primary'>\n            <EditOutlined\n              fontsize='small'\n            />\n          </Controls.ActionButton>\n          </Link>\n          <Controls.ActionButton\n                    onClick={() => {\n                      setConfirmDialog({\n                        isOpen: true,\n                        title: 'Are you sure to delete this record?',\n                        subTitle: \"You can't undo this operation!\",\n                        onConfirm: () => {\n                          onDelete(item.id);\n                        },\n                      });\n                      // onDelete(item.id);\n                    }}\n                    color='secondary'>\n                    <DeleteOutline fontsize='small' />\n                  </Controls.ActionButton>\n            </td>\n        </tr>\n        ))}\n\n       \n       \n        </table>\n    \n\n\n\n\n    }\n       \n            \n        </div>\n\n        <Popup\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        title='Employee Form'>\n        <h1>Okay</h1>\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n      <ConfirmDialog\n        confirmDialog={confirmDialog}\n        setConfirmDialog={setConfirmDialog}\n      />\n      </React.Fragment>\n    )\n}\n\nexport default UserListScreen\n"]},"metadata":{},"sourceType":"module"}