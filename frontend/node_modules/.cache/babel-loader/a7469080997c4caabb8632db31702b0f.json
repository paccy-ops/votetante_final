{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditCandidateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { updateUser } from '../Action/UserActions';\nimport { getCandidateDetails } from '../Action/CandidateActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCandidateScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const candidateId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isCandidate, setIsCandidate] = useState(false);\n  const dispatch = useDispatch();\n  const candidateDetails = useSelector(state => state.candidateDetails);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/users');\n    } else {\n      if (!candidate.name || candidate.id !== Number(candidateId)) {\n        dispatch(getCandidateDetails(candidateId));\n      } else {\n        setTitle(candidate.title);\n        setName(candidate.name);\n        setEmail(candidate.candidate_email);\n        setLocation(candidate.address);\n        setBio(candidate.bio);\n        setIsCandidate(candidate.isCandidate);\n        setIsAdmin(candidate.isAdmin);\n      }\n    }\n  }, [dispatch, candidate, candidateId, history, successUpdate]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      id: candidate.id,\n      name,\n      email,\n      location,\n      bio,\n      isAdmin,\n      isCandidate\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/users/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '200px',\n          outline: 'none'\n        },\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: [errorUpdate && /*#__PURE__*/_jsxDEV(Card, {\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"COMPLETE APPLICATION FOR\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'seagreen'\n                },\n                children: [\" \", candidate.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                placeholder: \"Enter Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \"Enter Address\",\n                value: location,\n                onChange: e => setLocation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bio\",\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"bio\",\n                placeholder: \"Write a Bio\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isCandidate,\n                  onChange: e => setIsCandidate(e.target.checked),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefault\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  for: \"flexSwitchCheckDefault\",\n                  children: \"IsCandidate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isAdmin,\n                  onChange: e => setIsAdmin(e.target.checked),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefaults\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  for: \"flexSwitchCheckDefaults\",\n                  children: \"IsAdmin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SAVE UPDATES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCandidateScreen, \"ParQxIRSZyevplYAxDQOvwh6JgE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditCandidateScreen;\nexport default EditCandidateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCandidateScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditCandidateScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","Card","LoadingSpinner","USER_UPDATE_RESET","Notification","updateUser","getCandidateDetails","EditCandidateScreen","match","history","notify","setNotify","isOpen","message","type","candidateId","params","id","name","setName","email","setEmail","title","setTitle","location","setLocation","bio","setBio","isAdmin","setIsAdmin","isCandidate","setIsCandidate","dispatch","candidateDetails","state","loading","error","candidate","userUpdate","success","successUpdate","errorUpdate","loadingUpdate","push","Number","candidate_email","address","updateSubmitHandler","e","preventDefault","position","left","outline","color","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\n\nimport { updateUser } from '../Action/UserActions';\nimport { getCandidateDetails } from '../Action/CandidateActions';\n\nfunction EditCandidateScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n\n  const candidateId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isCandidate, setIsCandidate] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const candidateDetails = useSelector((state) => state.candidateDetails);\n  const { loading, error, candidate } = candidateDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/users');\n    } else {\n      if (!candidate.name || candidate.id !== Number(candidateId)) {\n        dispatch(getCandidateDetails(candidateId));\n      } else {\n        setTitle(candidate.title);\n        setName(candidate.name);\n        setEmail(candidate.candidate_email);\n        setLocation(candidate.address);\n        setBio(candidate.bio);\n        setIsCandidate(candidate.isCandidate);\n        setIsAdmin(candidate.isAdmin);\n      }\n    }\n  }, [dispatch, candidate, candidateId, history, successUpdate]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      updateUser({\n        id: candidate.id,\n        name,\n        email,\n        location,\n        bio,\n        isAdmin,\n        isCandidate,\n      })\n    );\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n  };\n  return (\n    <div>\n      <Link to='/admin/users/'>\n        <button\n          style={{ position: 'absolute', left: '200px', outline: 'none' }}\n          type='button'\n          className='btn btn-outline-secondary'>\n          GO BACK\n        </button>\n      </Link>\n      <form onSubmit={updateSubmitHandler}>\n        <div className='login-form-register'>\n          <div className='container-form'>\n            {errorUpdate && <Card>{errorUpdate}</Card>}\n            {loadingUpdate && <LoadingSpinner asOverlay />}\n            {loading ? (\n              <LoadingSpinner />\n            ) : error ? (\n              <Card>{error}</Card>\n            ) : (\n              <div className='form-all'>\n                <h2>\n                  COMPLETE APPLICATION FOR{' '}\n                  <span style={{ color: 'seagreen' }}> {candidate.title}</span>{' '}\n                </h2>\n\n                <div className='form-control'>\n                  <label htmlFor='title'>Post Title</label>\n                  <input\n                    type='text'\n                    id='title'\n                    placeholder='Enter Post Title'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='username'>Name</label>\n                  <input\n                    type='text'\n                    id='username'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className='form-control'>\n                  <label htmlFor='email'>Email</label>\n                  <input\n                    type='email'\n                    id='email'\n                    placeholder='Enter Email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='address'>Address</label>\n                  <input\n                    type='text'\n                    id='address'\n                    placeholder='Enter Address'\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='bio'>Bio</label>\n                  <textarea\n                    type='text'\n                    id='bio'\n                    placeholder='Write a Bio'\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                  />\n                </div>\n                <div className='form-control'>\n                  <div className='form-check form-switch'>\n                    <input\n                      checked={isCandidate}\n                      onChange={(e) => setIsCandidate(e.target.checked)}\n                      className='form-check-input'\n                      type='checkbox'\n                      id='flexSwitchCheckDefault'\n                    />\n                    <label\n                      className='form-check-label'\n                      for='flexSwitchCheckDefault'>\n                      IsCandidate\n                    </label>\n                  </div>\n                </div>\n                <div className='form-control'>\n                  <div className='form-check form-switch'>\n                    <input\n                      checked={isAdmin}\n                      onChange={(e) => setIsAdmin(e.target.checked)}\n                      className='form-check-input'\n                      type='checkbox'\n                      id='flexSwitchCheckDefaults'\n                    />\n                    <label\n                      className='form-check-label'\n                      for='flexSwitchCheckDefaults'>\n                      IsAdmin\n                    </label>\n                  </div>\n                </div>\n\n                <Button type='submit'>SAVE UPDATES</Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </form>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n\nexport default EditCandidateScreen;\n"]},"metadata":{},"sourceType":"module"}