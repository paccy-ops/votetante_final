{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { postCreateReducers, postDeleteReducers, postDetailReducers, postListReducers, postUpdateReducers } from './reducers/PostReducers';\nimport { userUpdateProfileReducer, userDeleteReducer, userDetailsReducers, userListReducer, userLoginReducers, userRegisterReducers, userUpdateReducer } from './reducers/UserReducer';\nimport { listCandidatesReducer } from './reducers/CandidateReducers';\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete: postDeleteReducers,\n  postCreate: postCreateReducers,\n  postDetails: postDetailReducers,\n  postUpdate: postUpdateReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList: listCandidatesReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","postCreateReducers","postDeleteReducers","postDetailReducers","postListReducers","postUpdateReducers","userUpdateProfileReducer","userDeleteReducer","userDetailsReducers","userListReducer","userLoginReducers","userRegisterReducers","userUpdateReducer","listCandidatesReducer","reducer","postList","postDelete","postCreate","postDetails","postUpdate","userLogin","userRegister","userList","userDetails","userDelete","userUpdateProfile","userUpdate","candidatesList","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,EAAqEC,gBAArE,EAAuFC,kBAAvF,QAAiH,yBAAjH;AACA,SACEC,wBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,oBANF,EAOEC,iBAPF,QAQO,wBARP;AASA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,QAAQ,EAAEX,gBADoB;AAE9BY,EAAAA,UAAU,EAACd,kBAFmB;AAG9Be,EAAAA,UAAU,EAAChB,kBAHmB;AAI9BiB,EAAAA,WAAW,EAAEf,kBAJiB;AAK9BgB,EAAAA,UAAU,EAACd,kBALmB;AAM9Be,EAAAA,SAAS,EAAEV,iBANmB;AAO9BW,EAAAA,YAAY,EAAEV,oBAPgB;AAQ9BW,EAAAA,QAAQ,EAAEb,eARoB;AAS9Bc,EAAAA,WAAW,EAAEf,mBATiB;AAU9BgB,EAAAA,UAAU,EAAEjB,iBAVkB;AAW9BkB,EAAAA,iBAAiB,EAAEnB,wBAXW;AAY9BoB,EAAAA,UAAU,EAAEd,iBAZkB;AAa9Be,EAAAA,cAAc,EAACd;AAbe,CAAD,CAA/B;AAgBA,MAAMe,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEb,EAAAA,SAAS,EAAE;AAAEc,IAAAA,QAAQ,EAAEN;AAAZ;AAAb,CAArB;AACA,MAAMO,UAAU,GAAG,CAACpC,KAAD,CAAnB;AAEA,MAAMqC,KAAK,GAAGxC,WAAW,CACvBkB,OADuB,EAEvBmB,YAFuB,EAGvBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { postCreateReducers, postDeleteReducers, postDetailReducers, postListReducers, postUpdateReducers } from './reducers/PostReducers';\nimport {\n  userUpdateProfileReducer,\n  userDeleteReducer,\n  userDetailsReducers,\n  userListReducer,\n  userLoginReducers,\n  userRegisterReducers,\n  userUpdateReducer,\n} from './reducers/UserReducer';\nimport { listCandidatesReducer } from './reducers/CandidateReducers';\n\nconst reducer = combineReducers({\n  postList: postListReducers,\n  postDelete:postDeleteReducers,\n  postCreate:postCreateReducers,\n  postDetails: postDetailReducers,\n  postUpdate:postUpdateReducers,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userList: userListReducer,\n  userDetails: userDetailsReducers,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  candidatesList:listCandidatesReducer\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}