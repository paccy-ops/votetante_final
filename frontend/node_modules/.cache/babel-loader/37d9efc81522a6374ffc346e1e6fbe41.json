{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './PostScreen.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { CandidateCreate } from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [items, setItems] = useState();\n  const dispatch = useDispatch();\n  const postId = match.params.id;\n  const createApplication = useSelector(state => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated\n  } = createApplication;\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    post,\n    loading,\n    errors\n  } = postDetails;\n  setItems(post.candidates);\n  let itemsToRender;\n\n  if (items) {\n    itemsToRender = items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const candidate =post.candidates\n\n  useEffect(() => {\n    dispatch({\n      type: APPLY_CREATE_RESET\n    });\n\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]);\n\n  const createCandidateHandler = () => {\n    dispatch(CandidateCreate(post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-post-details\",\n    children: [loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), errors && /*#__PURE__*/_jsxDEV(Card, {\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.post_image,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createCandidateHandler,\n        className: \"apply\",\n        children: \"APPLY FOR THIS POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.applications === 10 ? 'red' : '#674305'\n          },\n          children: post.applications === 10 ? 'Closed' : 'Open'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Application: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), ' ', post.applications]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), ' ', post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), errorCreated && /*#__PURE__*/_jsxDEV(Card, {\n        children: errorCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }, this), loadingCreated && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '560px',\n        left: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Active Post for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'seagreen',\n            fontWeight: '900'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-candidate\",\n      children: itemsToRender ? /*#__PURE__*/_jsxDEV(Card, {\n        children: itemsToRender.isPass && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/post\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: itemsToRender.candidate_image,\n                  alt: itemsToRender.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: '20px',\n                    fontSize: '12px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green'\n                    },\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), itemsToRender.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '12px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"spn\", {\n                    style: {\n                      color: '#000'\n                    },\n                    children: \"Applied For: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"sp\", {\n                    children: itemsToRender.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '12px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#000'\n                    },\n                    children: \"E-mail:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this), ' ', itemsToRender.candidate_email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '15px',\n                    width: '90%',\n                    marginLeft: '10px',\n                    fontFamily: 'sans-serif'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '10px',\n                      color: 'seagreen'\n                    },\n                    children: \"Bio:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this), itemsToRender.bio.slice(1, 100)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${itemsToRender.user}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"View Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostScreen, \"qstjCnhP9XKFFcHWiHHLk9cfnGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostScreen;\nexport default _c2 = withRouter(PostScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","listPostDetails","LoadingSpinner","Card","CandidateCreate","APPLY_CREATE_RESET","withRouter","Link","PostScreen","match","history","items","setItems","dispatch","postId","params","id","createApplication","state","success","successCreated","loading","loadingCreated","error","errorCreated","postDetails","post","errors","candidates","itemsToRender","map","item","title","userLogin","userInfo","type","push","createCandidateHandler","post_image","color","applications","description","position","top","left","fontWeight","isPass","candidate_image","name","marginLeft","fontSize","candidate_email","width","fontFamily","marginRight","bio","slice","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,EAAwC;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,MAAM,GAAGL,KAAK,CAACM,MAAN,CAAaC,EAA5B;AAEA,QAAMC,iBAAiB,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACD,iBAAlB,CAArC;AACA,QAAM;AACJE,IAAAA,OAAO,EAAEC,cADL;AAEJC,IAAAA,OAAO,EAAEC,cAFL;AAGJC,IAAAA,KAAK,EAAEC;AAHH,MAIFP,iBAJJ;AAMA,QAAMQ,WAAW,GAAG1B,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACO,WAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQL,IAAAA,OAAR;AAAiBM,IAAAA;AAAjB,MAA4BF,WAAlC;AACAb,EAAAA,QAAQ,CAACc,IAAI,CAACE,UAAN,CAAR;AACA,MAAIC,aAAJ;;AACA,MAAIlB,KAAJ,EAAW;AACTkB,IAAAA,aAAa,GAAGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AAClC,0BAAO;AAAA,kBAAoBA,IAAI,CAACC;AAAzB,SAAUD,IAAI,CAACf,EAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFe,CAAhB;AAGD;;AACD,QAAMiB,SAAS,GAAGlC,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACe,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB,CAvBsC,CAyBtC;;AACApC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAAC;AAAEsB,MAAAA,IAAI,EAAE9B;AAAR,KAAD,CAAR;;AACA,QAAI,CAAC6B,QAAL,EAAe;AACbxB,MAAAA,OAAO,CAAC0B,IAAR,CAAa,aAAb;AACD,KAFD,MAEO,IAAIhB,cAAJ,EAAoB;AACzBV,MAAAA,OAAO,CAAC0B,IAAR,CAAc,mBAAkBV,IAAI,CAACV,EAAG,OAAxC;AACD,KAFM,MAEA;AACLH,MAAAA,QAAQ,CAACZ,eAAe,CAACa,MAAD,CAAhB,CAAR;AACD;AACF,GATQ,EASN,CAACD,QAAD,EAAWC,MAAX,EAAmBJ,OAAnB,EAA4BgB,IAA5B,EAAkCN,cAAlC,EAAkDc,QAAlD,CATM,CAAT;;AAWA,QAAMG,sBAAsB,GAAG,MAAM;AACnCxB,IAAAA,QAAQ,CAACT,eAAe,CAACsB,IAAI,CAACV,EAAN,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,eACGM,cAAc,iBAAI,QAAC,cAAD;AAAgB,MAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA,YADrB,EAEGD,OAAO,iBAAI,QAAC,cAAD;AAAgB,MAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFd,EAGGM,MAAM,iBAAI,QAAC,IAAD;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAHb,eAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,IAAI,CAACY,UAAf;AAA2B,QAAA,GAAG,EAAEZ,IAAI,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEK,sBAAjB;AAAyC,QAAA,SAAS,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGb,IAAI,CAACM,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGI;AACE,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAEb,IAAI,CAACc,YAAL,KAAsB,EAAtB,GAA2B,KAA3B,GAAmC;AAA5C,WADT;AAAA,oBAEGd,IAAI,CAACc,YAAL,KAAsB,EAAtB,GAA2B,QAA3B,GAAsC;AAFzC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EACwD,GADxD,EAEGb,IAAI,CAACc,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EACuD,GADvD,EAEGb,IAAI,CAACe,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,EAsBGjB,YAAY,iBAAI,QAAC,IAAD;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAtBnB,EAuBGF,cAAc,iBAAI,QAAC,cAAD;AAAgB,QAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA,cAvBrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAoCE;AACE,MAAA,KAAK,EAAE;AACLoB,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,OAFA;AAGLC,QAAAA,IAAI,EAAE;AAHD,OADT;AAAA,6BAME;AAAA,sCACkB,GADlB,eAEE;AACE,UAAA,KAAK,EAAE;AACLL,YAAAA,KAAK,EAAE,UADF;AAELM,YAAAA,UAAU,EAAE;AAFP,WADT;AAAA,oBAKGnB,IAAI,CAACM;AALR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YApCF,eAqDE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACGH,aAAa,gBACZ,QAAC,IAAD;AAAA,kBACGA,aAAa,CAACiB,MAAd,iBACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,OAAT;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE;AAAA,wCACE;AACE,kBAAA,GAAG,EAAEjB,aAAa,CAACkB,eADrB;AAEE,kBAAA,GAAG,EAAElB,aAAa,CAACmB;AAFrB;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE;AAAM,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE,MAAd;AAAsBC,oBAAAA,QAAQ,EAAE;AAAhC,mBAAb;AAAA,0CACE;AAAM,oBAAA,KAAK,EAAE;AAAEX,sBAAAA,KAAK,EAAE;AAAT,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGV,aAAa,CAACmB,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eASE;AAAI,kBAAA,KAAK,EAAE;AAAEE,oBAAAA,QAAQ,EAAE;AAAZ,mBAAX;AAAA,0CACE;AAAK,oBAAA,KAAK,EAAE;AAAEX,sBAAAA,KAAK,EAAE;AAAT,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAKV,aAAa,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAaE;AAAI,kBAAA,KAAK,EAAE;AAAEkB,oBAAAA,QAAQ,EAAE;AAAZ,mBAAX;AAAA,0CACE;AAAM,oBAAA,KAAK,EAAE;AAAEX,sBAAAA,KAAK,EAAE;AAAT,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EACiD,GADjD,EAEGV,aAAa,CAACsB,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF,eAiBE;AACE,kBAAA,KAAK,EAAE;AACLD,oBAAAA,QAAQ,EAAE,MADL;AAELE,oBAAAA,KAAK,EAAE,KAFF;AAGLH,oBAAAA,UAAU,EAAE,MAHP;AAILI,oBAAAA,UAAU,EAAE;AAJP,mBADT;AAAA,0CAOE;AACE,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,WAAW,EAAE,MAAf;AAAuBf,sBAAAA,KAAK,EAAE;AAA9B,qBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,EAWGV,aAAa,CAAC0B,GAAd,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,GAA3B,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF,eA8BE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAG,UAAS3B,aAAa,CAAC4B,IAAK,EAAvC;AAAA,yCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADY,gBA8CZ,QAAC,cAAD;AAAgB,QAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA;AA/CJ;AAAA;AAAA;AAAA;AAAA,YArDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0GD;;GAnJQjD,U;UAEUR,W,EAISD,W,EAONA,W,EASFA,W;;;KAtBXS,U;AAqJT,qBAAeF,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './PostScreen.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listPostDetails } from '../Action/PostActions';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport { CandidateCreate } from '../Action/CandidateActions';\nimport { APPLY_CREATE_RESET } from '../constants/CandidatesConstants';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nfunction PostScreen({ match, history }) {\n  const [items, setItems] = useState();\n  const dispatch = useDispatch();\n\n  const postId = match.params.id;\n\n  const createApplication = useSelector((state) => state.createApplication);\n  const {\n    success: successCreated,\n    loading: loadingCreated,\n    error: errorCreated,\n  } = createApplication;\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { post, loading, errors } = postDetails;\n  setItems(post.candidates);\n  let itemsToRender;\n  if (items) {\n    itemsToRender = items.map((item) => {\n      return <div key={item.id}>{item.title}</div>;\n    });\n  }\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // const candidate =post.candidates\n  useEffect(() => {\n    dispatch({ type: APPLY_CREATE_RESET });\n    if (!userInfo) {\n      history.push('/login/user');\n    } else if (successCreated) {\n      history.push(`/user/candidate/${post.id}/edit`);\n    } else {\n      dispatch(listPostDetails(postId));\n    }\n  }, [dispatch, postId, history, post, successCreated, userInfo]);\n\n  const createCandidateHandler = () => {\n    dispatch(CandidateCreate(post.id));\n  };\n\n  return (\n    <div className='main-post-details'>\n      {loadingCreated && <LoadingSpinner asOverlay />}\n      {loading && <LoadingSpinner asOverlay />}\n      {errors && <Card>{errors}</Card>}\n      <div className='section-image'>\n        <img src={post.post_image} alt={post.title} />\n        <button onClick={createCandidateHandler} className='apply'>\n          APPLY FOR THIS POST\n        </button>\n      </div>\n\n      <div className='section-description'>\n        <h1>\n          <span style={{ color: 'green' }}>Title: </span>\n          {post.title}\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Post:</span>\n          {\n            <span\n              style={{ color: post.applications === 10 ? 'red' : '#674305' }}>\n              {post.applications === 10 ? 'Closed' : 'Open'}\n            </span>\n          }\n        </h1>\n        <h1>\n          <span style={{ color: 'green' }}>Application: </span>{' '}\n          {post.applications}\n        </h1>\n        <p>\n          <span style={{ color: 'green' }}>Description:</span>{' '}\n          {post.description}\n        </p>\n        {errorCreated && <Card>{errorCreated}</Card>}\n        {loadingCreated && <LoadingSpinner asOverlay />}\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          top: '560px',\n          left: '200px',\n        }}>\n        <h1>\n          Active Post for{' '}\n          <span\n            style={{\n              color: 'seagreen',\n              fontWeight: '900',\n            }}>\n            {post.title}\n          </span>\n        </h1>\n      </div>\n      <div className='section-candidate'>\n        {itemsToRender ? (\n          <Card>\n            {itemsToRender.isPass && (\n              <div className='posts'>\n                <Link to='/post'>\n                  <div className='description'>\n                    <div>\n                      <img\n                        src={itemsToRender.candidate_image}\n                        alt={itemsToRender.name}\n                      />\n                      <span style={{ marginLeft: '20px', fontSize: '12px' }}>\n                        <span style={{ color: 'green' }}>Name:</span>\n                        {itemsToRender.name}\n                      </span>\n                      <h4 style={{ fontSize: '12px' }}>\n                        <spn style={{ color: '#000' }}>Applied For: </spn>\n                        <sp>{itemsToRender.title}</sp>\n                      </h4>\n                      <h4 style={{ fontSize: '12px' }}>\n                        <span style={{ color: '#000' }}>E-mail:</span>{' '}\n                        {itemsToRender.candidate_email}\n                      </h4>\n                      <p\n                        style={{\n                          fontSize: '15px',\n                          width: '90%',\n                          marginLeft: '10px',\n                          fontFamily: 'sans-serif',\n                        }}>\n                        <span\n                          style={{ marginRight: '10px', color: 'seagreen' }}>\n                          Bio:\n                        </span>\n                        {itemsToRender.bio.slice(1, 100)}\n                      </p>\n                      <Link to={`/users/${itemsToRender.user}`}>\n                        <button>View Profile</button>\n                      </Link>\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            )}\n          </Card>\n        ) : (\n          <LoadingSpinner asOverlay />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(PostScreen);\n"]},"metadata":{},"sourceType":"module"}