{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditUserScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { getUserDetails, updateUser } from '../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditUserScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isCandidate, setIsCandidate] = useState(false);\n  const dispatch = useDispatch();\n  const useDetails = useSelector(state => state.useDetails);\n  const {\n    loading,\n    error,\n    user\n  } = useDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/users');\n    } else {\n      if (!user.name || user.id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setLocation(user.location);\n        setBio(user.bio);\n        setIsCandidate(user.isCandidate);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, user, userId, history, successUpdate]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      id: user.id,\n      name,\n      email,\n      location,\n      bio,\n      isAdmin,\n      isCandidate\n    }));\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/users/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '200px',\n          outline: 'none'\n        },\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"EDIT USER  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                placeholder: \"Enter Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \"Enter Address\",\n                value: location,\n                onChange: e => setLocation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bio\",\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"bio\",\n                placeholder: \"Write a Bio\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: isCandidate,\n                  onChange: e => setIsCandidate(e.target.value),\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: \"flexSwitchCheckDefault\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  for: \"flexSwitchCheckDefault\",\n                  children: \"IsCandidate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"isCandidate\",\n                children: \"Candidate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"isCandidate\",\n                placeholder: \"Write a Bio\",\n                checked: isCandidate,\n                onChange: e => setIsCandidate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"SAVE UPDATES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUserScreen, \"L306ZiGa59b6Eh74S9Qa9Nyo4cE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditUserScreen;\nexport default EditUserScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditUserScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","Card","LoadingSpinner","USER_UPDATE_RESET","Notification","getUserDetails","updateUser","EditUserScreen","match","history","notify","setNotify","isOpen","message","type","userId","params","id","name","setName","email","setEmail","location","setLocation","bio","setBio","isAdmin","setIsAdmin","isCandidate","setIsCandidate","dispatch","useDetails","state","loading","error","user","userUpdate","success","successUpdate","errorUpdate","loadingUpdate","push","Number","updateSubmitHandler","e","preventDefault","position","left","outline","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css'\nimport Notification from '../shared/components/UIElements/Notification'\n\nimport { getUserDetails,updateUser } from '../Action/UserActions';\n\nfunction EditUserScreen({ match, history }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n const userId = match.params.id\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isCandidate, setIsCandidate] = useState(false);\n  \n\n  const dispatch = useDispatch()\n\n  const useDetails = useSelector(state => state.useDetails)\n  const {loading,error,user} = useDetails\n\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({type:USER_UPDATE_RESET})\n      history.push('/admin/users')\n      \n    }else{\n      if(!user.name || user.id !== Number(userId)){\n        dispatch(getUserDetails(userId))\n        }else{\n          setName(user.name)\n          setEmail(user.email)\n          setLocation(user.location)\n          setBio(user.bio)\n          setIsCandidate(user.isCandidate)\n          setIsAdmin(user.isAdmin)\n        }\n    }\n    \n    \n  }, [dispatch,user,userId,history,successUpdate])\n  \n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n   dispatch(updateUser({\n     id:user.id, name,email,location,bio,isAdmin,isCandidate\n   }))\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n    \n  };\n  return (\n    \n    <div>\n    <Link to=\"/admin/users/\">\n    <button  style={{position:'absolute',left:'200px' ,outline:'none'}} type=\"button\" className=\"btn btn-outline-secondary\">GO BACK</button>\n    </Link>\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n        {loading? <LoadingSpinner/>:error?<Card>{error}</Card>:\n          \n        \n        <div className='form-all'>\n        <h2>EDIT USER  </h2>\n    \n        <div className=\"form-control\">\n      <label htmlFor=\"username\">Name</label>\n      <input \n      type=\"text\" \n      id=\"username\" \n      placeholder=\"Enter Name\" \n      value={name}\n      onChange={(e) => setName(e.target.value)} />\n    \n    </div>\n    <div className=\"form-control\">\n      <label htmlFor=\"email\">Email</label>\n      <input type=\"email\"\n      id=\"email\" \n      placeholder=\"Enter Email\" \n      value={email}\n      onChange={(e) => setEmail(e.target.value)}/>\n    </div>\n\n    <div className=\"form-control\">\n      <label htmlFor=\"address\">Address</label>\n      <input type=\"text\" \n      id=\"address\"\n      placeholder=\"Enter Address\" \n      value={location}\n      onChange={(e) => setLocation(e.target.value)} />\n    </div>\n\n    <div className=\"form-control\">\n      <label htmlFor=\"bio\">Bio</label>\n      <textarea type=\"text\" \n      id=\"bio\" \n      placeholder=\"Write a Bio\"  \n      value={bio}\n      onChange={(e) => setBio(e.target.value)}/>\n    </div>\n    <div className=\"form-control\">\n    <div className=\"form-check form-switch\">\n      <input checked={isCandidate} onChange={(e) => setIsCandidate(e.target.value)} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n      <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">IsCandidate</label>\n    </div>\n    \n  </div>\n\n  <div className=\"form-control\">\n      <label htmlFor=\"isCandidate\">Candidate</label>\n      <input type=\"checkbox\" \n      id=\"isCandidate\" \n      placeholder=\"Write a Bio\"  \n      checked={isCandidate}\n      onChange={(e) => setIsCandidate(e.target.value)}/>\n    </div>\n    \n        \n        <Button type='submit'>\n          SAVE UPDATES\n        </Button>\n\n        \n          \n  \n</div>\n      }\n         \n        </div>\n      </div>\n    </form>\n    <Notification notify={notify} setNotify={setNotify} />\n\n    </div>\n    \n  );\n}\n\n\n\nexport default EditUserScreen;\n"]},"metadata":{},"sourceType":"module"}