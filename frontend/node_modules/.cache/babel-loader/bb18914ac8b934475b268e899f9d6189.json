{"ast":null,"code":"import _slicedToArray from\"/Users/pacifique/Desktop/UC/offiaclreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/pacifique/Desktop/UC/offiaclreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useEffect}from'react';import{validate}from'../../util/validators';import'./Input.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var inputReducer=function inputReducer(state,action){switch(action.type){case'CHANGE':return _objectSpread(_objectSpread({},state),{},{value:action.val,isValid:validate(action.val,action.validators)});case'TOUCH':{return _objectSpread(_objectSpread({},state),{},{isTouched:true});}default:return state;}};var Input=function Input(props){var _useReducer=useReducer(inputReducer,{value:props.initialValue||'',isTouched:false,isValid:props.initialValid||false}),_useReducer2=_slicedToArray(_useReducer,2),inputState=_useReducer2[0],dispatch=_useReducer2[1];var id=props.id,onInput=props.onInput;var value=inputState.value,isValid=inputState.isValid;useEffect(function(){onInput(id,value,isValid);},[id,value,isValid,onInput]);var changeHandler=function changeHandler(event){dispatch({type:'CHANGE',val:event.target.value,validators:props.validators});};var touchHandler=function touchHandler(){dispatch({type:'TOUCH'});};var element=props.element==='input'?/*#__PURE__*/_jsx(\"input\",{id:props.id,type:props.type,placeholder:props.placeholder,onChange:changeHandler,onBlur:touchHandler,value:inputState.value,className:props.className}):/*#__PURE__*/_jsx(\"textarea\",{id:props.id,rows:props.rows||3,onChange:changeHandler,onBlur:touchHandler,value:inputState.value,className:props.className});return/*#__PURE__*/_jsxs(\"div\",{className:\"form-control  \".concat(!inputState.isValid&&inputState.isTouched?'form-control--invalid':'form-control--valid'),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:props.id,children:props.label}),element,!inputState.isValid&&inputState.isTouched&&/*#__PURE__*/_jsx(\"small\",{children:props.errorText})]});};export default Input;","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","className","rows","label","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={props.className}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={props.className}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control  ${\n        !inputState.isValid && inputState.isTouched\n          ? 'form-control--invalid'\n          : 'form-control--valid'\n      }`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && (\n        <small>{props.errorText}</small>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}