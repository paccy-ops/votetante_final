{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/Users/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Register.css';\nimport { RegisterUser } from '../../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register({\n  location,\n  history\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    userInfo,\n    loading\n  } = userRegister;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    },\n    passwordConfirm: {\n      value: '',\n      isValid: false\n    },\n    name: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const registerSubmitHandler = e => {\n    e.preventDefault();\n\n    if (formState.inputs.password.value !== formState.inputs.passwordConfirm.value) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(RegisterUser(formState.inputs.name.value, formState.inputs.email.value, formState.inputs.password.value, formState.inputs.passwordConfirm.value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: registerSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Register With Us \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            placeholder: \"Enter Name\",\n            validators: [VALIDATOR_REQUIRE()],\n            errorText: \"Name Required\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"email\",\n            type: \"email\",\n            label: \"E-Mail\",\n            placeholder: \"Enter E-Mail\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Please enter a valid email address.\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"location\",\n            type: \"text\",\n            label: \"Address(Country/City)\",\n            placeholder: \"Enter Address\",\n            errorText: \"Address Required\",\n            validators: [VALIDATOR_REQUIRE()],\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"\",\n            id: \"name\",\n            type: \"text\",\n            label: \"Bio\",\n            placeholder: \"Enter Bio\",\n            validators: [VALIDATOR_REQUIRE()],\n            errorText: \"Bio Required\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Enter Password\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Please enter a valid password, at least 6 characters.\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"passwordConfirm\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            placeholder: \"Enter Password again\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Password don't match\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !formState.isValid,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '15px'\n            },\n            children: [\"Already have an Account?\", /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: 'none',\n                fontSize: '20px',\n                marginLeft: '5px'\n              },\n              to: redirect ? `/login?redirect=${redirect}` : '/login',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"RYEs6Nc7Wl29grg5PLD5zsmoShU=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/Users/Pages/Register.js"],"names":["React","useEffect","useState","Input","Button","Link","useSelector","useDispatch","Card","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","RegisterUser","Register","location","history","message","setMessage","redirect","search","split","dispatch","userRegister","state","error","userInfo","loading","push","formState","inputHandler","email","value","isValid","password","passwordConfirm","name","registerSubmitHandler","e","preventDefault","inputs","fontSize","textDecoration","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Register.css';\nimport { RegisterUser } from '../../Action/UserActions';\nfunction Register({ location, history }) {\n  const [message, setMessage] = useState('');\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, userInfo, loading } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const [formState, inputHandler] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n      passwordConfirm: {\n        value: '',\n        isValid: false,\n      },\n      name: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n  const registerSubmitHandler = (e) => {\n    e.preventDefault();\n    if (\n      formState.inputs.password.value !== formState.inputs.passwordConfirm.value\n    ) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(\n        RegisterUser(\n          formState.inputs.name.value,\n          formState.inputs.email.value,\n          formState.inputs.password.value,\n          formState.inputs.passwordConfirm.value\n        )\n      );\n    }\n  };\n  return (\n    <form onSubmit={registerSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n          <div className='form-all'>\n            <h2>Register With Us </h2>\n            {message && <Card className='error_message'>{message}</Card>}\n            {error && <Card className='error_message'>{error}</Card>}\n            {loading && <LoadingSpinner asOverlay />}\n            <Input\n              element='input'\n              id='name'\n              type='text'\n              label='Name'\n              placeholder='Enter Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Name Required'\n              onInput={inputHandler}\n            />\n              <Input\n                element='input'\n                id='email'\n                type='email'\n                label='E-Mail'\n                placeholder='Enter E-Mail'\n                validators={[VALIDATOR_EMAIL()]}\n                errorText='Please enter a valid email address.'\n                onInput={inputHandler}\n              />\n\n              <Input\n              element='input'\n              id='location'\n              type='text'\n              label='Address(Country/City)'\n              placeholder='Enter Address'\n              errorText='Address Required'\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n            <Input\n            element=''\n            id='name'\n            type='text'\n            label='Bio'\n            placeholder='Enter Bio'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Bio Required'\n            onInput={inputHandler}\n          />\n        \n            <Input\n              element='input'\n              id='password'\n              type='password'\n              label='Password'\n              placeholder='Enter Password'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText='Please enter a valid password, at least 6 characters.'\n              onInput={inputHandler}\n            />\n            <Input\n              element='input'\n              id='passwordConfirm'\n              type='password'\n              label='Confirm Password'\n              placeholder='Enter Password again'\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText=\"Password don't match\"\n              onInput={inputHandler}\n            />\n            <Button type='submit' disabled={!formState.isValid}>\n              Register\n            </Button>\n\n            <h3\n              style={{\n                fontSize: '15px',\n              }}>\n              Already have an Account?\n              <Link\n                style={{\n                  textDecoration: 'none',\n                  fontSize: '20px',\n                  marginLeft: '5px',\n                }}\n                to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                Login\n              </Link>\n            </h3>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\n\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}