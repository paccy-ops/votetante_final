{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport Card from '../shared/components/UIElements/Card';\nimport './UserListScreen.css';\nimport { deleteUser } from '../Action/UserActions';\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls';\nimport Notification from '../shared/components/UIElements/Notification';\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog';\nimport { listPosts } from '../Action/PostActions'; // import Popup from '../shared/components/UIElements/Popup'\n// import EmployeesForm from '../shared/components/UIElements/EmployeesForm'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostListScreen({\n  history\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const dispatch = useDispatch();\n  const postList = useSelector(state => state.postList);\n  const {\n    posts,\n    loading,\n    error\n  } = postList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listPosts());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, userInfo, history, success]);\n\n  const createPostHandler = post => {// \n  };\n\n  const deleteHandler = id => {\n    dispatch(deleteUser(id));\n\n    if (success) {\n      setConfirmDialog({ ...confirmDialog,\n        isOpen: false\n      });\n      setNotify({\n        isOpen: true,\n        message: 'Deleted Successfully',\n        type: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"23px\"\n      },\n      children: \"ALL POSTS LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPostHandler,\n      className: \"add_post\",\n      type: \"button\",\n      class: \"btn btn-outline-success\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 113\n      }, this), \" Add Post\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 53\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CreatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [post.description.slice(1, 80), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.applications\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: post.isActive ? '#126EFD' : ''\n            },\n            children: post.isActive ? 'Yes' : /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                color: 'red',\n                marginLeft: '20px'\n              },\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 82\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/admin/post/${post.id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n              color: \"default\",\n              children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                fontSize: \"small\",\n                onClick: () => {\n                  setConfirmDialog({\n                    isOpen: true,\n                    title: 'Are you sure to delete this Post?',\n                    subTitle: \"You can't undo this operation!\",\n                    onConfirm: () => {\n                      deleteHandler(post.id);\n                    }\n                  }); // onDelete(item.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostListScreen, \"owRtOkt+xMTFoB8xHo5ZNwTqQk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostListScreen;\nexport default PostListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/PostListScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","LoadingSpinner","Card","deleteUser","EditOutlined","DeleteOutline","Controls","Notification","ConfirmDialog","listPosts","PostListScreen","history","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","dispatch","postList","state","posts","loading","error","userLogin","userInfo","userDelete","success","isAdmin","push","createPostHandler","post","deleteHandler","id","fontSize","marginTop","map","description","slice","applications","createdAt","color","isActive","marginLeft","onConfirm"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner'\nimport Card  from '../shared/components/UIElements/Card'\nimport './UserListScreen.css'\nimport { deleteUser } from '../Action/UserActions'\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\nimport Controls from '../shared/controls/Controls'\nimport Notification from '../shared/components/UIElements/Notification'\nimport ConfirmDialog from '../shared/components/UIElements/ConfirmDialog'\nimport { listPosts } from '../Action/PostActions'\n// import Popup from '../shared/components/UIElements/Popup'\n// import EmployeesForm from '../shared/components/UIElements/EmployeesForm'\n\nfunction PostListScreen({history}) {\n    const [notify, setNotify] = useState({\n        isOpen: false,\n        message: '',\n        type: '',\n      });\n      const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: '',\n      });\nconst dispatch = useDispatch()\nconst postList = useSelector(state => state.postList)\nconst {posts,loading,error} = postList\n\nconst userLogin = useSelector(state => state.userLogin)\nconst {userInfo} = userLogin\n\nconst userDelete = useSelector(state => state.userDelete)\nconst {success} = userDelete\n\nuseEffect(() => {\n    if(userInfo && userInfo.isAdmin){\n        dispatch(listPosts())\n    }else{\n        history.push('/login')\n    }\n\n  \n    \n}, [dispatch,userInfo,history,success])\n\nconst createPostHandler = (post) =>{\n  // \n}\n\nconst deleteHandler =  (id) =>{\n        dispatch(deleteUser(id))\n        if(success){\n            setConfirmDialog({\n                ...confirmDialog,\n                isOpen: false,\n              });\n         setNotify({\n             isOpen: true,\n             message: 'Deleted Successfully',\n             type: 'error',\n           });   \n    }\n}\n    return (\n        <div className=\"user__list\">\n        <h2 style={{fontSize:\"23px\"}}>ALL POSTS LIST</h2>\n        <button onClick={createPostHandler} className=\"add_post\" type=\"button\" class=\"btn btn-outline-success\"> <i className=\"fas fa-plus\"></i> Add Post</button>\n\n        {loading ?<LoadingSpinner asOverlay/>:error?<Card>{error}</Card>:\n        <table style={{\n            marginTop:'30px'\n        }}>\n        \n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Applications</th>\n            <th>CreatedAt</th>\n            <th>Active</th>\n            <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {posts.map((post)=>(\n            <tr key={post.id}>\n            <td>{post.id}</td>\n            <td>{post.title}</td>\n            <td>{post.description.slice(1,80)}...</td>\n            <td>{post.applications}</td>\n            <td>{post.createdAt}</td>\n            <td style={{color: post.isActive?'#126EFD':''}}>{post.isActive?'Yes':<i style={{color:'red',marginLeft:'20px'}} className=\"fas fa-times\"></i>}</td>\n            <td>\n            <Link to={`/admin/post/${post.id}/edit`}>\n            <Controls.ActionButton color='primary'>\n            <EditOutlined\n              fontSize='small'\n            />\n          </Controls.ActionButton>\n          </Link>\n          <Controls.ActionButton\n            color='default'>\n            <DeleteOutline fontSize='small' \n            onClick={() => {\n                setConfirmDialog({\n                  isOpen: true,\n                  title: 'Are you sure to delete this Post?',\n                  subTitle: \"You can't undo this operation!\",\n                  onConfirm: () => {\n                    deleteHandler(post.id);\n                  },\n                });\n                // onDelete(item.id);\n              }}\n            \n            />\n          </Controls.ActionButton>\n            </td>\n        </tr>\n        ))}     \n        </tbody> \n        </table>\n\n    }\n    \n    <Notification notify={notify} setNotify={setNotify} />\n    <ConfirmDialog\n    confirmDialog={confirmDialog}\n    setConfirmDialog={setConfirmDialog}\n  />\n     \n        </div>\n    )\n}\n\nexport default PostListScreen\n"]},"metadata":{},"sourceType":"module"}