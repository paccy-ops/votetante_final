{"ast":null,"code":"import { CANDIDATES_LIST_REQUEST, CANDIDATES_LIST_SUCCESS, CANDIDATES_LIST_FAIL //\n, APPLY_CREATE_REQUEST, APPLY_CREATE_SUCCESS, APPLY_CREATE_FAIL //\n, CANDIDATE_DETAILS_SUCCESS, CANDIDATE_DETAILS_FAIL, CANDIDATE_DETAILS_REQUEST //\n, CANDIDATE_DELETE_SUCCESS, CANDIDATE_DELETE_FAIL, CANDIDATE_DELETE_REQUEST //\n, CANDIDATE_UPDATE_SUCCESS, CANDIDATE_UPDATE_FAIL, CANDIDATE_UPDATE_REQUEST //\n, CANDIDATE_POST_SUCCESS, CANDIDATE_POST_FAIL, CANDIDATE_POST_REQUEST } from '../constants/CandidatesConstants';\nimport axios from 'axios';\nexport const listCandidates = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/candidates/`, config);\n    dispatch({\n      type: CANDIDATES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATES_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // create post\n\nexport const CandidateCreate = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: APPLY_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/candidates/${id}/create/`, {}, config);\n    dispatch({\n      type: APPLY_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: APPLY_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // get candidate details\n\nexport const getCandidateDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/candidates/${id}`, config);\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // candidate by post\n\nexport const getCandidateByPostDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_POST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/candidates/post/${id}`, config);\n    dispatch({\n      type: CANDIDATE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_POST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const CandidateUpdate = candidate => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`/api/candidates/update/${candidate.id}/`, candidate, config);\n    dispatch({\n      type: CANDIDATE_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // CANDIDATE DELETE\n\nexport const CandidateDelete = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/candidates/delete/${id}`, config);\n    dispatch({\n      type: CANDIDATE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/Action/CandidateActions.js"],"names":["CANDIDATES_LIST_REQUEST","CANDIDATES_LIST_SUCCESS","CANDIDATES_LIST_FAIL","APPLY_CREATE_REQUEST","APPLY_CREATE_SUCCESS","APPLY_CREATE_FAIL","CANDIDATE_DETAILS_SUCCESS","CANDIDATE_DETAILS_FAIL","CANDIDATE_DETAILS_REQUEST","CANDIDATE_DELETE_SUCCESS","CANDIDATE_DELETE_FAIL","CANDIDATE_DELETE_REQUEST","CANDIDATE_UPDATE_SUCCESS","CANDIDATE_UPDATE_FAIL","CANDIDATE_UPDATE_REQUEST","CANDIDATE_POST_SUCCESS","CANDIDATE_POST_FAIL","CANDIDATE_POST_REQUEST","axios","listCandidates","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","detail","message","CandidateCreate","id","post","getCandidateDetails","getCandidateByPostDetails","CandidateUpdate","candidate","patch","CandidateDelete","delete"],"mappings":"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","sourcesContent":["import {\n  CANDIDATES_LIST_REQUEST,\n  CANDIDATES_LIST_SUCCESS,\n  CANDIDATES_LIST_FAIL,\n\n  //\n  APPLY_CREATE_REQUEST,\n  APPLY_CREATE_SUCCESS,\n  APPLY_CREATE_FAIL,\n\n  //\n  CANDIDATE_DETAILS_SUCCESS,\n  CANDIDATE_DETAILS_FAIL,\n  CANDIDATE_DETAILS_REQUEST,\n\n  //\n  CANDIDATE_DELETE_SUCCESS,\n  CANDIDATE_DELETE_FAIL,\n  CANDIDATE_DELETE_REQUEST,\n\n  //\n  CANDIDATE_UPDATE_SUCCESS,\n  CANDIDATE_UPDATE_FAIL,\n  CANDIDATE_UPDATE_REQUEST,\n\n  //\n  CANDIDATE_POST_SUCCESS,\n  CANDIDATE_POST_FAIL,\n  CANDIDATE_POST_REQUEST,\n} from '../constants/CandidatesConstants';\nimport axios from 'axios';\n\nexport const listCandidates = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/candidates/`, config);\n\n    dispatch({\n      type: CANDIDATES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATES_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// create post\n\nexport const CandidateCreate = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: APPLY_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      `/api/candidates/${id}/create/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: APPLY_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: APPLY_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// get candidate details\n\nexport const getCandidateDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CANDIDATE_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `/api/candidates/${id}`,\n\n      config\n    );\n    dispatch({ type: CANDIDATE_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// candidate by post\n\nexport const getCandidateByPostDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CANDIDATE_POST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `/api/candidates/post/${id}`,\n\n      config\n    );\n    dispatch({ type: CANDIDATE_POST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_POST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const CandidateUpdate = (candidate) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.patch(\n      `/api/candidates/update/${candidate.id}/`,\n      candidate,\n      config\n    );\n\n    dispatch({ type: CANDIDATE_UPDATE_SUCCESS });\n    dispatch({\n      type: CANDIDATE_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// CANDIDATE DELETE\n\nexport const CandidateDelete = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANDIDATE_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/candidates/delete/${id}`, config);\n\n    dispatch({\n      type: CANDIDATE_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: CANDIDATE_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}