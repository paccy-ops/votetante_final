{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/offiaclreact/src/screen/UserApplyScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { getCandidateByPostDetails } from '../Action/CandidateActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserApplyScreen({\n  match\n}) {\n  _s();\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const postAId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [whyApply, setApplyReason] = useState('');\n  const [bio, setBio] = useState('');\n  const dispatch = useDispatch();\n  const candidateByPost = useSelector(state => state.candidateByPost);\n  const {\n    loading,\n    error,\n    candidate\n  } = candidateByPost;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n    // }else{\n    if (candidate.name !== userInfo.name || candidate.post !== Number(postAId)) {\n      dispatch(getCandidateByPostDetails(postAId));\n    } else if (!candidate.title || !candidate.name) {\n      dispatch(getCandidateByPostDetails(postAId));\n    } else {\n      setTitle(candidate.title);\n      setBio(candidate.bio);\n      setName(candidate.name);\n      setEmail(candidate.candidate_email);\n      setAddress(candidate.address);\n      setApplyReason(candidate.whyApply);\n    }\n  }, [dispatch, candidate, postAId, userInfo]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault(); //  dispatch(CandidateCreate({\n    //    post:candidateId, title,bio,name,candidate_email,address,whyApply\n    //  }))\n\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-form\",\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-all\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [' ', \"Your applying for\", ' ', /*#__PURE__*/_jsxDEV(\"spn\", {\n                style: {\n                  color: 'seagreen',\n                  marginLeft: '3px',\n                  marginRight: '3px',\n                  fontWeight: '600'\n                },\n                children: [' ', candidate.title, ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), ' ', \"Post\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                placeholder: \"Enter Post Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \" Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                placeholder: \" Applicant Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \" Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                placeholder: \" Applicant Email\",\n                value: candidate_email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \" Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \" Applicant address\",\n                value: address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Biography\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"description\",\n                placeholder: \"Write a Bio\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"why\",\n                children: \"Why are you applying for this Post?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                id: \"why\",\n                placeholder: \"why this post? \",\n                value: whyApply,\n                onChange: e => setApplyReason(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"SUBMIT APPLICATION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserApplyScreen, \"z7pKNfEXEQDmXjbSottzHLuSlsg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserApplyScreen;\nexport default _c2 = withRouter(UserApplyScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserApplyScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/offiaclreact/src/screen/UserApplyScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Link","withRouter","Card","LoadingSpinner","Notification","getCandidateByPostDetails","UserApplyScreen","match","notify","setNotify","isOpen","message","type","postAId","params","id","title","setTitle","name","setName","candidate_email","setEmail","address","setAddress","whyApply","setApplyReason","bio","setBio","dispatch","candidateByPost","state","loading","error","candidate","userLogin","userInfo","post","Number","updateSubmitHandler","e","preventDefault","color","marginLeft","marginRight","fontWeight","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport './EditProfileScreen.css';\nimport Notification from '../shared/components/UIElements/Notification';\nimport { getCandidateByPostDetails } from '../Action/CandidateActions';\n\nfunction UserApplyScreen({ match }) {\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: '',\n  });\n  const postAId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [candidate_email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [whyApply, setApplyReason] = useState('');\n  const [bio, setBio] = useState('');\n\n  const dispatch = useDispatch();\n\n  const candidateByPost = useSelector((state) => state.candidateByPost);\n  const { loading, error, candidate } = candidateByPost;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // const postUpdate = useSelector(state => state.postUpdate)\n  // const {success:successUpdate,error:errorUpdate,loading:loadingUpdate} = postUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({type:APPLY_CREATE_RESET})\n    //   history.push('/admin/posts')\n\n    // }else{\n    if (\n      candidate.name !== userInfo.name ||\n      candidate.post !== Number(postAId)\n    ) {\n      dispatch(getCandidateByPostDetails(postAId));\n    } else if (!candidate.title || !candidate.name) {\n      dispatch(getCandidateByPostDetails(postAId));\n    } else {\n      setTitle(candidate.title);\n      setBio(candidate.bio);\n      setName(candidate.name);\n      setEmail(candidate.candidate_email);\n      setAddress(candidate.address);\n      setApplyReason(candidate.whyApply);\n    }\n  }, [dispatch, candidate, postAId, userInfo]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    //  dispatch(CandidateCreate({\n    //    post:candidateId, title,bio,name,candidate_email,address,whyApply\n    //  }))\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success',\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={updateSubmitHandler}>\n        <div className='login-form-register'>\n          <div className='container-form'>\n            {loading ? (\n              <LoadingSpinner />\n            ) : error ? (\n              <Card>{error}</Card>\n            ) : (\n              <div className='form-all'>\n                <h2>\n                  {' '}\n                  Your applying for{' '}\n                  <spn\n                    style={{\n                      color: 'seagreen',\n                      marginLeft: '3px',\n                      marginRight: '3px',\n                      fontWeight: '600',\n                    }}>\n                    {' '}\n                    {candidate.title}{' '}\n                  </spn>{' '}\n                  Post\n                </h2>\n\n                <div className='form-control'>\n                  <label htmlFor='title'>Post Title</label>\n                  <input\n                    type='text'\n                    id='title'\n                    placeholder='Enter Post Title'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='name'> Name</label>\n                  <input\n                    type='text'\n                    id='name'\n                    placeholder=' Applicant Name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='email'> Email</label>\n                  <input\n                    type='email'\n                    id='email'\n                    placeholder=' Applicant Email'\n                    value={candidate_email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='address'> Address</label>\n                  <input\n                    type='text'\n                    id='address'\n                    placeholder=' Applicant address'\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='description'>Biography</label>\n                  <textarea\n                    type='text'\n                    id='description'\n                    placeholder='Write a Bio'\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                  />\n                </div>\n\n                <div className='form-control'>\n                  <label htmlFor='why'>\n                    Why are you applying for this Post?\n                  </label>\n                  <textarea\n                    type='text'\n                    id='why'\n                    placeholder='why this post? '\n                    value={whyApply}\n                    onChange={(e) => setApplyReason(e.target.value)}\n                  />\n                </div>\n\n                <Link to='/'>\n                  <Button type='submit'>SUBMIT APPLICATION</Button>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </form>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n\nexport default withRouter(UserApplyScreen);\n"]},"metadata":{},"sourceType":"module"}