{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGOUT, USER_LOGIN_SUCCESS //\n, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST //\n, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET //\n, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET //\n, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST //\n, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST } from '../constants/UserConstant';\nimport axios from 'axios';\nimport { CANDIDATES_LIST_RESET, CANDIDATE_DETAILS_RESET } from '../constants/CandidatesConstants';\nexport const LoginUser = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: CANDIDATES_LIST_RESET\n  });\n  dispatch({\n    type: CANDIDATE_DETAILS_RESET\n  });\n}; // USER REGISTER ACTION\n\nexport const RegisterUser = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      name: name,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; //  USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/delete/${id}/`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // UPDATE USER\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`/api/users/update/${user.id}/`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/Action/UserActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGOUT","USER_LOGIN_SUCCESS","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","axios","CANDIDATES_LIST_RESET","CANDIDATE_DETAILS_RESET","LoginUser","email","password","dispatch","type","config","headers","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","RegisterUser","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","patch","listUsers","deleteUser","delete","updateUser"],"mappings":"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","sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_LOGIN_SUCCESS,\n\n  //\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n\n  //\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n\n  //\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n\n  //\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  //\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n} from '../constants/UserConstant';\nimport axios from 'axios';\nimport {\n  CANDIDATES_LIST_RESET,\n  CANDIDATE_DETAILS_RESET,\n} from '../constants/CandidatesConstants';\n\nexport const LoginUser = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/login/',\n      {\n        username: email,\n        password: password,\n      },\n      config\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: CANDIDATES_LIST_RESET });\n  dispatch({ type: CANDIDATE_DETAILS_RESET });\n};\n\n// USER REGISTER ACTION\n\nexport const RegisterUser = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/register/',\n      {\n        name: name,\n        email: email,\n        password: password,\n      },\n      config\n    );\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n//  USER DETAILS\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `/api/users/${id}`,\n\n      config\n    );\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.patch(\n      `/api/users/profile/update/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// UPDATE USER\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.patch(\n      `/api/users/update/${user.id}/`,\n      user,\n      config\n    );\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}