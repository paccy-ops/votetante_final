{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfileScreen({\n  history\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [image, setImage] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmpassword] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo.id !== user.id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        history.push('/user/profile');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setLocation(user.location);\n        setBio(user.bio);\n        setImage(user.image);\n      }\n    }\n  }, [dispatch, userInfo, user, history, success]);\n\n  const updateSubmitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user.id,\n        name: name,\n        email: email,\n        location: location,\n        bio: bio,\n        // image: image,\n        password: password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updateSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"EDIT YOUR PROFILE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"error_message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            asOverlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              placeholder: \"Enter Username\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              placeholder: \"Enter Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address\",\n              placeholder: \"Enter Address\",\n              value: location,\n              onChange: e => setLocation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bio\",\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"bio\",\n              placeholder: \"Write Bio\",\n              value: bio,\n              onChange: e => setBio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"User Profile Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"file\",\n              id: \"image\",\n              value: image,\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control form-control-lg\",\n                id: \"formFileLg\",\n                type: \"file\",\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), uploading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                asOverlay: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Enter Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pasword2\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password2\",\n              placeholder: \"Enter Password again\",\n              value: confirmPassword,\n              onChange: e => setConfirmpassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"SAVE PROFILE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfileScreen, \"JVavPuf+Pg/V5xqut7hj7HhuuRI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/screen/EditProfileScreen.js"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","Card","LoadingSpinner","USER_UPDATE_PROFILE_RESET","getUserDetails","updateUserProfile","EditProfileScreen","history","message","setMessage","name","setName","email","setEmail","location","setLocation","bio","setBio","image","setImage","password","setPassword","confirmPassword","setConfirmpassword","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","id","type","updateSubmitHandler","e","preventDefault","target","value","uploadFileHandler","uploading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../shared/components/FormElements/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../shared/components/UIElements/Card';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/UserConstant';\nimport './EditProfileScreen.css';\nimport { getUserDetails, updateUserProfile } from '../Action/UserActions';\nfunction EditProfileScreen({ history }) {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState('');\n  const [bio, setBio] = useState('');\n  const [image, setImage] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmpassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo.id !== user.id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails('profile'));\n        history.push('/user/profile');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setLocation(user.location);\n        setBio(user.bio);\n        setImage(user.image)\n      }\n    }\n  }, [dispatch, userInfo, user, history, success]);\n\n  const updateSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user.id,\n          name: name,\n          email: email,\n          location: location,\n          bio: bio,\n          // image: image,\n          password: password,\n        })\n      );\n    }\n  };\n\n  return (\n    <form onSubmit={updateSubmitHandler}>\n      <div className='login-form-register'>\n        <div className='container-form'>\n          <div className='form-all'>\n            <h2>EDIT YOUR PROFILE </h2>\n            {message && <Card className='error_message'>{message}</Card>}\n            {error && <Card className='error_message'>{error}</Card>}\n            {loading && <LoadingSpinner asOverlay />}\n            <div className='form-control'>\n              <label htmlFor='username'>Name</label>\n              <input\n                type='text'\n                id='username'\n                placeholder='Enter Username'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='email'>Email</label>\n              <input\n                type='email'\n                id='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n              <label htmlFor='address'>Address</label>\n              <input\n                type='text'\n                id='address'\n                placeholder='Enter Address'\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n              <label htmlFor='bio'>Bio</label>\n              <textarea\n                type='text'\n                id='bio'\n                placeholder='Write Bio'\n                value={bio}\n                onChange={(e) => setBio(e.target.value)}\n              />\n            </div>\n\n            <div className='form-control'>\n            <label htmlFor='image'>User Profile Upload</label>\n            <textarea\n              type='file'\n              id='image'\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            <div>\n                    <input\n                      className='form-control form-control-lg'\n                      id='formFileLg'\n                      type='file'\n                      onChange={uploadFileHandler}\n                    />\n                    {uploading && <LoadingSpinner asOverlay />}\n                  </div>\n          </div>\n            <div className='form-control'>\n              <label htmlFor='password'>Password</label>\n              <input\n                type='password'\n                id='password'\n                placeholder='Enter Password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label htmlFor='pasword2'>Confirm Password</label>\n              <input\n                type='password'\n                id='password2'\n                placeholder='Enter Password again'\n                value={confirmPassword}\n                onChange={(e) => setConfirmpassword(e.target.value)}\n              />\n            </div>\n\n            <Button type='submit'>SAVE PROFILE</Button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default EditProfileScreen;\n"]},"metadata":{},"sourceType":"module"}