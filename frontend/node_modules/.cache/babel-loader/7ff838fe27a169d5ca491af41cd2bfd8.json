{"ast":null,"code":"var _jsxFileName = \"/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/Useform.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Useform(initialValues, validateOnChange = false, validate) {\n  _s();\n\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n\n    if (validateOnChange) {\n      validate({\n        [name]: value\n      });\n    }\n  };\n\n  const resetForm = () => {\n    setValues(initialValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    errors,\n    setErrors,\n    setValues,\n    handleInputChange,\n    resetForm\n  };\n}\n\n_s(Useform, \"n1PFYgq5JtbzkIsmPbSRLOOcfKE=\");\n\n_c = Useform;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Useform\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/pacifique/Desktop/UC/ClASSpROJECT/voteTante/frontend/src/shared/components/UIElements/Useform.js"],"names":["React","useState","makeStyles","Useform","initialValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","resetForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AACA,OAAO,SAASC,OAAT,CAAiBC,aAAjB,EAAgCC,gBAAgB,GAAG,KAAnD,EAA0DC,QAA1D,EAAoE;AAAA;;AACzE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,aAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQC;AAFA,KAAD,CAAT;;AAIA,QAAIT,gBAAJ,EAAsB;AACpBC,MAAAA,QAAQ,CAAC;AAAE,SAACO,IAAD,GAAQC;AAAV,OAAD,CAAR;AACD;AACF,GATD;;AAWA,QAAME,SAAS,GAAG,MAAM;AACtBR,IAAAA,SAAS,CAACJ,aAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAIA,SAAO;AAAEH,IAAAA,MAAF;AAAUE,IAAAA,MAAV;AAAkBC,IAAAA,SAAlB;AAA6BF,IAAAA,SAA7B;AAAwCG,IAAAA,iBAAxC;AAA2DK,IAAAA;AAA3D,GAAP;AACD;;GApBeb,O;;KAAAA,O;AAsBhB,MAAMc,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,8BAA0B;AACxBC,MAAAA,KAAK,EAAE,KADiB;AAExBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFgB;AADtB;AADiC,CAAZ,CAAD,CAA5B;AAQA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAC1B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACGH,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAReH,I;UACEN,S;;;MADFM,I","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nexport function Useform(initialValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n\n  const resetForm = () => {\n    setValues(initialValues);\n    setErrors({});\n  };\n  return { values, errors, setErrors, setValues, handleInputChange, resetForm };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    },\n  },\n}));\nexport function Form(props) {\n  const classes = useStyles();\n  const { children, ...other } = props;\n  return (\n    <form className={classes.root} autoComplete='off' {...other}>\n      {props.children}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}